{"version":3,"sources":["../lib/cryptojs_v3.1.2.js","../temp/xapiwrapper.js","../temp/activitytypes.js","../temp/verbs.js","../temp/xapistatement.js","../temp/xapi-util.js","../temp/xapi-launch.js"],"names":["CryptoJS","Math","undefined","C","C_lib","lib","Base","F","extend","overrides","prototype","this","subtype","mixIn","hasOwnProperty","init","$super","apply","arguments","create","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","stringify","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","i","thatByte","push","ceil","call","slice","random","nBytes","C_enc","enc","hexChars","bite","join","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","Error","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","Base64","map","_map","base64Chars","triplet","j","charAt","paddingChar","base64Str","base64StrLength","paddingIndex","indexOf","bits1","bits2","reset","_data","_nDataBytes","_append","data","_process","doFlush","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","processedWords","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","key","C_algo","HMAC","algo","W","SHA1","_hash","M","H","a","b","c","d","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","h","s","f","g","q","m","r","k","l","u","toBase64","text","encode","toSHA1","Crypto","util","bytesToHex","asBytes","toSHA256","content","Object","SHA256","i8a","Uint8Array","isDate","date","Date","isNaN","valueOf","ADL","XAPIWrapper","log","getByteLen","normal_val","byteLen","Number","NaN","sqrt","pow","p","HmacSHA256","_hasher","_oKey","_iKey","activityTypes","assessment","attempt","course","file","interaction","lesson","link","media","meeting","module","objective","performance","profile","question","simulation","verbs","abandoned","id","display","en-US","answered","de-DE","fr-FR","es-ES","ar-AR","asked","attempted","attended","commented","completed","exited","experienced","failed","imported","initialized","interacted","launched","mastered","passed","preferred","progressed","registered","responded","resumed","satisfied","scored","shared","suspended","terminated","voided","waived","toISOString","pad","number","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","debug","Config","conf","endpoint","config","verifyxapiversion","getbase","url","parseUrl","protocol","host","href","parts","split","updateAuth","obj","username","password","auth","lrs","getLRSObject","user","base","withCredentials","strictCallbacks","testConfig","XHR_request","status","lrsabout","JSON","response","versionOK","idx","version","xapiVersion","searchParams","format","hash","tohash","changeConfig","mergeRecursive","console","obj1","obj2","constructor","qsVars","prop","lrsProps","parseQueryString","keys","extended","pairs","pair","ii","parsed","location","search","delay","xhr","XMLHttpRequest","ruuid","open","send","prepareStatement","stmt","actor","grouping","registration","activity_platform","context","contextActivities","platform","defaultEncoding","sendStatement","callback","attachments","payload","extraHeaders","buildMultipartPost","resp","stringToArrayBuffer","encoding","TextEncoder","buffer","stringFromArrayBuffer","TextDecoder","decode","statement","type","usageType","description","contentType","value","byteLength","sha2","blobParts","boundary","substring","CRLF","header","attachmentHeader","Blob","sendStatements","stmtArray","getStatements","searchparams","more","urlparams","Array","res","getActivities","activityid","replace","result","sendState","agent","stateid","stateval","matchHash","noneMatchHash","headers","If-Match","formatHash","If-None-Match","method","getState","since","deleteState","sendActivityProfile","profileid","profileval","getActivityProfile","deleteActivityProfile","getAgents","sendAgentProfile","getAgentProfile","deleteAgentProfile","isNode","Boolean","root","document","require","createElement","ie_request","newUrl","formData","qsIndex","headerName","_getobj","path","part","test","async","crossDomain","responseText","responseJSON","readyState","onreadystatechange","onerror","error","onload","setRequestHeader","name","http","includes","options","parsedUrl","req","request","setEncoding","statusCode","on","bind","end","dateFromISOString","isostr","match","RegExp","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","getTimezoneOffset","time","dateToReturn","setTime","callbackargs","ignore404","ieModeRequest","until","finished","xDomainRequest","ieXDomain","urlparts","toLowerCase","Content-Type","hostname","port","windowsVersionCheck","XDomainRequest","responseType","requestComplete","notFoundOk","warning","ex","xhrRequestOnError","body","XAPIStatement","verb","object","Agent","objectType","Group","Verb","StatementRef","SubStatement","Activity","generateId","isValid","generateRegistration","addParentActivity","activity","addGroupingActivity","addOtherContextActivity","identifier","mbox","mbox_sha1sum","openid","account","homePage","member","members","act","definition","stored","authority","onBrowser","window","getObjDefName","o","xapiutil","getLangVal","getSubStatementDisplay","getActorId","getVerbDisplay","getObjectId","getQueryVariable","variable","vars","cb_wrap","cb","args","setTimeout","callerArgs","observeForNewLinks","target","MutationObserver","mutations","forEach","mutation","addedNodes","HTMLAnchorElement","setupCourseLinks","observe","attributes","childList","subtree","_nodes","query","courseLink","getNamedItem","xAPILaunch","terminate_on_unload","strict_callbacks","launchToken","launchEndpoint","terminate","launch","URL","pathname","xhr2","code","err","launchData","onunload","wrapper","querySelectorAll","getLang","lang","navigator","language","browserLanguage","systemLanguage","userLanguage","process","env","LANG","str","langprop","ret","dispGotten","lastIndexOf","getMoreStatements","iterations","stmts","getMore","statements","getActorIdString","getActorDisplay","v","getObjectType","getObjectIdString","getObjectDisplay","disp"],"mappings":"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","file":"xapiwrapper.min.js.map","sourceRoot":"dist/","sourcesContent":["/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/**\r\n * CryptoJS core components.\r\n */\r\nvar CryptoJS = CryptoJS || (function (Math, undefined) {\r\n    /**\r\n     * CryptoJS namespace.\r\n     */\r\n    var C = {};\r\n\r\n    /**\r\n     * Library namespace.\r\n     */\r\n    var C_lib = C.lib = {};\r\n\r\n    /**\r\n     * Base object for prototypal inheritance.\r\n     */\r\n    var Base = C_lib.Base = (function () {\r\n        function F() {}\r\n\r\n        return {\r\n            /**\r\n             * Creates a new object that inherits from this object.\r\n             *\r\n             * @param {Object} overrides Properties to copy into the new object.\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         field: 'value',\r\n             *\r\n             *         method: function () {\r\n             *         }\r\n             *     });\r\n             */\r\n            extend: function (overrides) {\r\n                // Spawn\r\n                F.prototype = this;\r\n                var subtype = new F();\r\n\r\n                // Augment\r\n                if (overrides) {\r\n                    subtype.mixIn(overrides);\r\n                }\r\n\r\n                // Create default initializer\r\n                if (!subtype.hasOwnProperty('init')) {\r\n                    subtype.init = function () {\r\n                        subtype.$super.init.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                // Initializer's prototype is the subtype object\r\n                subtype.init.prototype = subtype;\r\n\r\n                // Reference supertype\r\n                subtype.$super = this;\r\n\r\n                return subtype;\r\n            },\r\n\r\n            /**\r\n             * Extends this object and runs the init method.\r\n             * Arguments to create() will be passed to init().\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var instance = MyType.create();\r\n             */\r\n            create: function () {\r\n                var instance = this.extend();\r\n                instance.init.apply(instance, arguments);\r\n\r\n                return instance;\r\n            },\r\n\r\n            /**\r\n             * Initializes a newly created object.\r\n             * Override this method to add some logic when your objects are created.\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         init: function () {\r\n             *             // ...\r\n             *         }\r\n             *     });\r\n             */\r\n            init: function () {\r\n            },\r\n\r\n            /**\r\n             * Copies properties into this object.\r\n             *\r\n             * @param {Object} properties The properties to mix in.\r\n             *\r\n             * @example\r\n             *\r\n             *     MyType.mixIn({\r\n             *         field: 'value'\r\n             *     });\r\n             */\r\n            mixIn: function (properties) {\r\n                for (var propertyName in properties) {\r\n                    if (properties.hasOwnProperty(propertyName)) {\r\n                        this[propertyName] = properties[propertyName];\r\n                    }\r\n                }\r\n\r\n                // IE won't copy toString using the loop above\r\n                if (properties.hasOwnProperty('toString')) {\r\n                    this.toString = properties.toString;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Creates a copy of this object.\r\n             *\r\n             * @return {Object} The clone.\r\n             *\r\n             * @example\r\n             *\r\n             *     var clone = instance.clone();\r\n             */\r\n            clone: function () {\r\n                return this.init.prototype.extend(this);\r\n            }\r\n        };\r\n    }());\r\n\r\n    /**\r\n     * An array of 32-bit words.\r\n     *\r\n     * @property {Array} words The array of 32-bit words.\r\n     * @property {number} sigBytes The number of significant bytes in this word array.\r\n     */\r\n    var WordArray = C_lib.WordArray = Base.extend({\r\n        /**\r\n         * Initializes a newly created word array.\r\n         *\r\n         * @param {Array} words (Optional) An array of 32-bit words.\r\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.create();\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n         */\r\n        init: function (words, sigBytes) {\r\n            words = this.words = words || [];\r\n\r\n            if (sigBytes != undefined) {\r\n                this.sigBytes = sigBytes;\r\n            } else {\r\n                this.sigBytes = words.length * 4;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts this word array to a string.\r\n         *\r\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n         *\r\n         * @return {string} The stringified word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     var string = wordArray + '';\r\n         *     var string = wordArray.toString();\r\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n         */\r\n        toString: function (encoder) {\r\n            return (encoder || Hex).stringify(this);\r\n        },\r\n\r\n        /**\r\n         * Concatenates a word array to this word array.\r\n         *\r\n         * @param {WordArray} wordArray The word array to append.\r\n         *\r\n         * @return {WordArray} This word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray1.concat(wordArray2);\r\n         */\r\n        concat: function (wordArray) {\r\n            // Shortcuts\r\n            var thisWords = this.words;\r\n            var thatWords = wordArray.words;\r\n            var thisSigBytes = this.sigBytes;\r\n            var thatSigBytes = wordArray.sigBytes;\r\n\r\n            // Clamp excess bits\r\n            this.clamp();\r\n\r\n            // Concat\r\n            if (thisSigBytes % 4) {\r\n                // Copy one byte at a time\r\n                for (var i = 0; i < thatSigBytes; i++) {\r\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n                }\r\n            } else if (thatWords.length > 0xffff) {\r\n                // Copy one word at a time\r\n                for (var i = 0; i < thatSigBytes; i += 4) {\r\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n                }\r\n            } else {\r\n                // Copy all words at once\r\n                thisWords.push.apply(thisWords, thatWords);\r\n            }\r\n            this.sigBytes += thatSigBytes;\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes insignificant bits.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray.clamp();\r\n         */\r\n        clamp: function () {\r\n            // Shortcuts\r\n            var words = this.words;\r\n            var sigBytes = this.sigBytes;\r\n\r\n            // Clamp\r\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n            words.length = Math.ceil(sigBytes / 4);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this word array.\r\n         *\r\n         * @return {WordArray} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = wordArray.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone.words = this.words.slice(0);\r\n\r\n            return clone;\r\n        },\r\n\r\n        /**\r\n         * Creates a word array filled with random bytes.\r\n         *\r\n         * @param {number} nBytes The number of random bytes to generate.\r\n         *\r\n         * @return {WordArray} The random word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n         */\r\n        random: function (nBytes) {\r\n            var words = [];\r\n            for (var i = 0; i < nBytes; i += 4) {\r\n                words.push((Math.random() * 0x100000000) | 0);\r\n            }\r\n\r\n            return new WordArray.init(words, nBytes);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Encoder namespace.\r\n     */\r\n    var C_enc = C.enc = {};\r\n\r\n    /**\r\n     * Hex encoding strategy.\r\n     */\r\n    var Hex = C_enc.Hex = {\r\n        /**\r\n         * Converts a word array to a hex string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The hex string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var hexChars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                hexChars.push((bite >>> 4).toString(16));\r\n                hexChars.push((bite & 0x0f).toString(16));\r\n            }\r\n\r\n            return hexChars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a hex string to a word array.\r\n         *\r\n         * @param {string} hexStr The hex string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n         */\r\n        parse: function (hexStr) {\r\n            // Shortcut\r\n            var hexStrLength = hexStr.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < hexStrLength; i += 2) {\r\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n            }\r\n\r\n            return new WordArray.init(words, hexStrLength / 2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Latin1 encoding strategy.\r\n     */\r\n    var Latin1 = C_enc.Latin1 = {\r\n        /**\r\n         * Converts a word array to a Latin1 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Latin1 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var latin1Chars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                latin1Chars.push(String.fromCharCode(bite));\r\n            }\r\n\r\n            return latin1Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Latin1 string to a word array.\r\n         *\r\n         * @param {string} latin1Str The Latin1 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n         */\r\n        parse: function (latin1Str) {\r\n            // Shortcut\r\n            var latin1StrLength = latin1Str.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < latin1StrLength; i++) {\r\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            return new WordArray.init(words, latin1StrLength);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * UTF-8 encoding strategy.\r\n     */\r\n    var Utf8 = C_enc.Utf8 = {\r\n        /**\r\n         * Converts a word array to a UTF-8 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The UTF-8 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            try {\r\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n            } catch (e) {\r\n                throw new Error('Malformed UTF-8 data');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts a UTF-8 string to a word array.\r\n         *\r\n         * @param {string} utf8Str The UTF-8 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n         */\r\n        parse: function (utf8Str) {\r\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n        }\r\n    };\r\n    /**\r\n     * Base64 encoding strategy.\r\n     */\r\n    var Base64 = C_enc.Base64 = {\r\n        /**\r\n         * Converts a word array to a Base64 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Base64 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n            var map = this._map;\r\n\r\n            // Clamp excess bits\r\n            wordArray.clamp();\r\n\r\n            // Convert\r\n            var base64Chars = [];\r\n            for (var i = 0; i < sigBytes; i += 3) {\r\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n                }\r\n            }\r\n\r\n            // Add padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                while (base64Chars.length % 4) {\r\n                    base64Chars.push(paddingChar);\r\n                }\r\n            }\r\n\r\n            return base64Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Base64 string to a word array.\r\n         *\r\n         * @param {string} base64Str The Base64 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n         */\r\n        parse: function (base64Str) {\r\n            // Shortcuts\r\n            var base64StrLength = base64Str.length;\r\n            var map = this._map;\r\n\r\n            // Ignore padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                var paddingIndex = base64Str.indexOf(paddingChar);\r\n                if (paddingIndex != -1) {\r\n                    base64StrLength = paddingIndex;\r\n                }\r\n            }\r\n\r\n            // Convert\r\n            var words = [];\r\n            var nBytes = 0;\r\n            for (var i = 0; i < base64StrLength; i++) {\r\n                if (i % 4) {\r\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\r\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\r\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n                    nBytes++;\r\n                }\r\n            }\r\n\r\n            return WordArray.create(words, nBytes);\r\n        },\r\n\r\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n    };\r\n\r\n    /**\r\n     * Abstract buffered block algorithm template.\r\n     *\r\n     * The property blockSize must be implemented in a concrete subtype.\r\n     *\r\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n     */\r\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n        /**\r\n         * Resets this block algorithm's data buffer to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm.reset();\r\n         */\r\n        reset: function () {\r\n            // Initial values\r\n            this._data = new WordArray.init();\r\n            this._nDataBytes = 0;\r\n        },\r\n\r\n        /**\r\n         * Adds new data to this block algorithm's buffer.\r\n         *\r\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm._append('data');\r\n         *     bufferedBlockAlgorithm._append(wordArray);\r\n         */\r\n        _append: function (data) {\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof data == 'string') {\r\n                data = Utf8.parse(data);\r\n            }\r\n\r\n            // Append\r\n            this._data.concat(data);\r\n            this._nDataBytes += data.sigBytes;\r\n        },\r\n\r\n        /**\r\n         * Processes available data blocks.\r\n         *\r\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n         *\r\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n         *\r\n         * @return {WordArray} The processed data.\r\n         *\r\n         * @example\r\n         *\r\n         *     var processedData = bufferedBlockAlgorithm._process();\r\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n         */\r\n        _process: function (doFlush) {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n            var dataSigBytes = data.sigBytes;\r\n            var blockSize = this.blockSize;\r\n            var blockSizeBytes = blockSize * 4;\r\n\r\n            // Count blocks ready\r\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n            if (doFlush) {\r\n                // Round up to include partial blocks\r\n                nBlocksReady = Math.ceil(nBlocksReady);\r\n            } else {\r\n                // Round down to include only full blocks,\r\n                // less the number of blocks that must remain in the buffer\r\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n            }\r\n\r\n            // Count words ready\r\n            var nWordsReady = nBlocksReady * blockSize;\r\n\r\n            // Count bytes ready\r\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n            // Process blocks\r\n            if (nWordsReady) {\r\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n                    // Perform concrete-algorithm logic\r\n                    this._doProcessBlock(dataWords, offset);\r\n                }\r\n\r\n                // Remove processed words\r\n                var processedWords = dataWords.splice(0, nWordsReady);\r\n                data.sigBytes -= nBytesReady;\r\n            }\r\n\r\n            // Return processed words\r\n            return new WordArray.init(processedWords, nBytesReady);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this object.\r\n         *\r\n         * @return {Object} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = bufferedBlockAlgorithm.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone._data = this._data.clone();\r\n\r\n            return clone;\r\n        },\r\n\r\n        _minBufferSize: 0\r\n    });\r\n\r\n    /**\r\n     * Abstract hasher template.\r\n     *\r\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n     */\r\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n        /**\r\n         * Configuration options.\r\n         */\r\n        cfg: Base.extend(),\r\n\r\n        /**\r\n         * Initializes a newly created hasher.\r\n         *\r\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hasher = CryptoJS.algo.SHA256.create();\r\n         */\r\n        init: function (cfg) {\r\n            // Apply config defaults\r\n            this.cfg = this.cfg.extend(cfg);\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this hasher to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Reset data buffer\r\n            BufferedBlockAlgorithm.reset.call(this);\r\n\r\n            // Perform concrete-hasher logic\r\n            this._doReset();\r\n        },\r\n\r\n        /**\r\n         * Updates this hasher with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {Hasher} This hasher.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.update('message');\r\n         *     hasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            // Append\r\n            this._append(messageUpdate);\r\n\r\n            // Update the hash\r\n            this._process();\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the hash computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The hash.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hash = hasher.finalize();\r\n         *     var hash = hasher.finalize('message');\r\n         *     var hash = hasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Final message update\r\n            if (messageUpdate) {\r\n                this._append(messageUpdate);\r\n            }\r\n\r\n            // Perform concrete-hasher logic\r\n            var hash = this._doFinalize();\r\n\r\n            return hash;\r\n        },\r\n\r\n        blockSize: 512/32,\r\n\r\n        /**\r\n         * Creates a shortcut function to a hasher's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to create a helper for.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHelper: function (hasher) {\r\n            return function (message, cfg) {\r\n                return new hasher.init(cfg).finalize(message);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates a shortcut function to the HMAC's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHmacHelper: function (hasher) {\r\n            return function (message, key) {\r\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n            };\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Algorithm namespace.\r\n     */\r\n    var C_algo = C.algo = {};\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-1 hash algorithm.\r\n     */\r\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init([\r\n                0x67452301, 0xefcdab89,\r\n                0x98badcfe, 0x10325476,\r\n                0xc3d2e1f0\r\n            ]);\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 80; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n                    W[i] = (n << 1) | (n >>> 31);\r\n                }\r\n\r\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n                if (i < 20) {\r\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\r\n                } else if (i < 40) {\r\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\r\n                } else if (i < 60) {\r\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n                } else /* if (i < 80) */ {\r\n                    t += (b ^ c ^ d) - 0x359d3e2a;\r\n                }\r\n\r\n                e = d;\r\n                d = c;\r\n                c = (b << 30) | (b >>> 2);\r\n                b = a;\r\n                a = t;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA1('message');\r\n     *     var hash = CryptoJS.SHA1(wordArray);\r\n     */\r\n    C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n     */\r\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n\r\n    return C;\r\n}(Math));\r\n\r\n\r\n//add the sha256 functions\r\n\r\n/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\r\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\r\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\r\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\r\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\r\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\r\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\r\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\r\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\r\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\r\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\r\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\r\n","// adds toISOString to date objects if not there\r\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\r\nif ( !Date.prototype.toISOString ) {\r\n  ( function() {\r\n\r\n    function pad(number) {\r\n      var r = String(number);\r\n      if ( r.length === 1 ) {\r\n        r = '0' + r;\r\n      }\r\n      return r;\r\n    }\r\n\r\n    Date.prototype.toISOString = function() {\r\n      return this.getUTCFullYear()\r\n        + '-' + pad( this.getUTCMonth() + 1 )\r\n        + '-' + pad( this.getUTCDate() )\r\n        + 'T' + pad( this.getUTCHours() )\r\n        + ':' + pad( this.getUTCMinutes() )\r\n        + ':' + pad( this.getUTCSeconds() )\r\n        + '.' + String( (this.getUTCMilliseconds()/1000).toFixed(3) ).slice( 2, 5 )\r\n        + 'Z';\r\n    };\r\n\r\n  }() );\r\n}\r\n\r\n// shim for old-style Base64 lib\r\nfunction toBase64(text){\r\n  if(CryptoJS && CryptoJS.enc.Base64)\r\n    return CryptoJS.enc.Base64.stringify(CryptoJS.enc.Latin1.parse(text));\r\n  else\r\n    return Base64.encode(text);\r\n}\r\n\r\n// shim for old-style crypto lib\r\nfunction toSHA1(text){\r\n  if(CryptoJS && CryptoJS.SHA1)\r\n    return CryptoJS.SHA1(text).toString();\r\n  else\r\n    return Crypto.util.bytesToHex( Crypto.SHA1(text,{asBytes:true}) );\r\n}\r\n\r\nfunction toSHA256(content) {\r\n  if (Object.prototype.toString.call(content) !== \"[object ArrayBuffer]\") {\r\n    return CryptoJS.SHA256(content).toString(CryptoJS.enc.Hex);\r\n  }\r\n\r\n  // Create a WordArray from the ArrayBuffer.\r\n  var i8a = new Uint8Array(content);\r\n  var a = [];\r\n  for (var i = 0; i < i8a.length; i += 4) {\r\n    a.push(i8a[i] << 24 | i8a[i + 1] << 16 | i8a[i + 2] << 8 | i8a[i + 3]);\r\n  }\r\n\r\n  return CryptoJS.SHA256(CryptoJS.lib.WordArray.create(a, i8a.length)).toString(CryptoJS.enc.Hex);\r\n}\r\n\r\n// check if string or object is date, if it is, return date object\r\n// feburary 31st == march 3rd in this solution\r\nfunction isDate(date) {\r\n    // check if object is being passed\r\n    if ( Object.prototype.toString.call(date) === \"[object Date]\" )\r\n        var d = date;\r\n    else\r\n        var d = new Date(date);\r\n    // deep check on date object\r\n    if ( Object.prototype.toString.call(d) === \"[object Date]\" )\r\n    {\r\n        // it is a date\r\n        if ( isNaN( d.valueOf() ) )\r\n        {\r\n            ADL.XAPIWrapper.log(\"Invalid date String passed\");\r\n            return null;\r\n        } else {\r\n            return d;\r\n        }\r\n    } else {\r\n        // not a date\r\n        ADL.XAPIWrapper.log(\"Invalid date object\");\r\n        return null;\r\n    }\r\n}\r\n\r\n    log.debug = false;\r\n\r\n    function getByteLen(normal_val) {\r\n        // Force string type\r\n        normal_val = String(normal_val);\r\n\r\n        var byteLen = 0;\r\n        for (var i = 0; i < normal_val.length; i++) {\r\n            var c = normal_val.charCodeAt(i);\r\n            byteLen += c < (1 <<  7) ? 1 :\r\n                       c < (1 << 11) ? 2 :\r\n                       c < (1 << 16) ? 3 :\r\n                       c < (1 << 21) ? 4 :\r\n                       c < (1 << 26) ? 5 :\r\n                       c < (1 << 31) ? 6 : Number.NaN;\r\n        }\r\n        return byteLen;\r\n    }\r\n\r\n    /*\r\n     * Config object used w/ url params to configure the lrs object\r\n     * change these to match your lrs\r\n     * @return {object} config object\r\n     * @example\r\n     * var conf = {\r\n     *    \"endpoint\" : \"https://lrs.adlnet.gov/xapi/\",\r\n     *    \"auth\" : \"Basic \" + toBase64('tom:1234'),\r\n     * };\r\n     * ADL.XAPIWrapper.changeConfig(conf);\r\n     */\r\n    var Config = function()\r\n    {\r\n        var conf = {};\r\n        conf['endpoint'] = \"http://localhost:8000/xapi/\";\r\n        //try\r\n        //{\r\n            conf['auth'] = \"Basic \" + toBase64('tom:1234');\r\n        //}\r\n        //catch (e)\r\n        //{\r\n        //    log(\"Exception in Config trying to encode auth: \" + e);\r\n        //}\r\n\r\n        // Statement defaults\r\n        // conf[\"actor\"] = {\"mbox\":\"default@example.com\"};\r\n        // conf[\"registration\"] =  ruuid();\r\n        // conf[\"grouping\"] = {\"id\":\"ctxact:default/grouping\"};\r\n        // conf[\"activity_platform\"] = \"default platform\";\r\n\r\n        // Behavior defaults\r\n        // conf[\"strictCallbacks\"] = false; // Strict error-first callbacks\r\n        return conf\r\n    }();\r\n\r\n    /*\r\n     * XAPIWrapper Constructor\r\n     * @param {object} config   with a minimum of an endoint property\r\n     * @param {boolean} verifyxapiversion   indicating whether to verify the version of the LRS is compatible with this wrapper\r\n     */\r\n    var XAPIWrapper = function(config, verifyxapiversion)\r\n    {\r\n\r\n\r\n\r\n        this.lrs = getLRSObject(config || {});\r\n        if (this.lrs.user && this.lrs.password)\r\n            updateAuth(this.lrs, this.lrs.user, this.lrs.password);\r\n        this.base = getbase(this.lrs.endpoint);\r\n\r\n        this.withCredentials = false;\r\n        if (config && typeof(config.withCredentials) != 'undefined') {\r\n            this.withCredentials = config.withCredentials;\r\n        }\r\n\r\n        // Ensure that callbacks are always executed, first param is error (null if no error) followed\r\n        // by the result(s)\r\n        this.strictCallbacks = false;\r\n        this.strictCallbacks = config && config.strictCallbacks;\r\n\r\n        function getbase(url)\r\n        {\r\n            var l = parseUrl(url);\r\n            if (l.protocol && l.host) {\r\n                return l.protocol + \"//\" + l.host;\r\n            } else if (l.href) {\r\n                // IE 11 fix.\r\n                var parts = l.href.split(\"//\");\r\n                return parts[0] + \"//\" + parts[1].substr(0, parts[1].indexOf(\"/\"));\r\n            }\r\n            else\r\n                ADL.XAPIWrapper.log(\"Couldn't create base url from endpoint: \" + url);\r\n        }\r\n\r\n        function updateAuth(obj, username, password){\r\n            obj.auth = \"Basic \" + toBase64(username + \":\" + password);\r\n        }\r\n\r\n        if (verifyxapiversion && testConfig.call(this))\r\n        {\r\n            ADL.XHR_request(this.lrs, this.lrs.endpoint+\"about\", \"GET\", null, null,\r\n                function(r){\r\n                    if(r.status == 200)\r\n                    {\r\n                        try\r\n                        {\r\n                            var lrsabout = JSON.parse(r.response);\r\n                            var versionOK = false;\r\n                            for (var idx in lrsabout.version)\r\n                            {\r\n                                if (lrsabout.version.hasOwnProperty(idx))\r\n                                    if(lrsabout.version[idx] == ADL.XAPIWrapper.xapiVersion)\r\n                                    {\r\n                                        versionOK = true;\r\n                                        break;\r\n                                    }\r\n                            }\r\n                            if (!versionOK)\r\n                            {\r\n                                ADL.XAPIWrapper.log(\"The lrs version [\" + lrsabout.version +\"]\"+\r\n                                    \" does not match this wrapper's XAPI version [\" + ADL.XAPIWrapper.xapiVersion + \"]\");\r\n                            }\r\n                        }\r\n                        catch(e)\r\n                        {\r\n                            ADL.XAPIWrapper.log(\"The response was not an about object\")\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        ADL.XAPIWrapper.log(\"The request to get information about the LRS failed: \" + r);\r\n                    }\r\n                }, null, false, null, this.withCredentials, false);\r\n\r\n\r\n        }\r\n\r\n        this.searchParams = function(){\r\n            var sp = {\"format\" : \"exact\"};\r\n            return sp;\r\n        };\r\n\r\n        this.hash = function(tohash){\r\n            if (!tohash) return null;\r\n            try\r\n            {\r\n                return toSHA1(tohash);\r\n            }\r\n            catch(e)\r\n            {\r\n                ADL.XAPIWrapper.log(\"Error trying to hash -- \" + e);\r\n                return null;\r\n            }\r\n        };\r\n\r\n        this.changeConfig = function(config){\r\n            try\r\n            {\r\n                ADL.XAPIWrapper.log(\"updating lrs object with new configuration\");\r\n                this.lrs = mergeRecursive(this.lrs, config);\r\n                if (config.user && config.password)\r\n                    this.updateAuth(this.lrs, config.user, config.password);\r\n                this.base = getbase(this.lrs.endpoint);\r\n                this.withCredentials = config.withCredentials;\r\n                this.strictCallbacks = config.strictCallbacks;\r\n            }\r\n            catch(e)\r\n            {\r\n                ADL.XAPIWrapper.log(\"error while changing configuration -- \" + e);\r\n            }\r\n        };\r\n\r\n        this.updateAuth = updateAuth;\r\n    };\r\n\r\n    // This wrapper is based on the Experience API Spec version:\r\n    XAPIWrapper.prototype.xapiVersion = \"1.0.1\";\r\n\r\n    /*\r\n     * Adds info from the lrs object to the statement, if available.\r\n     * These values could be initialized from the Config object or from the url query string.\r\n     * @param {object} stmt   the statement object\r\n     */\r\n    XAPIWrapper.prototype.prepareStatement = function(stmt)\r\n    {\r\n        if(stmt.actor === undefined){\r\n            stmt.actor = JSON.parse(this.lrs.actor);\r\n        }\r\n        else if(typeof stmt.actor === \"string\") {\r\n            stmt.actor = JSON.parse(stmt.actor);\r\n        }\r\n        if (this.lrs.grouping ||\r\n            this.lrs.registration ||\r\n            this.lrs.activity_platform) {\r\n            if (!stmt.context) {\r\n                stmt.context = {};\r\n            }\r\n        }\r\n\r\n        if (this.lrs.grouping) {\r\n            if (!stmt.context.contextActivities) {\r\n                stmt.context.contextActivities = {};\r\n            }\r\n            stmt.context.contextActivities.grouping = [{ id : this.lrs.grouping }];\r\n        }\r\n        if (this.lrs.registration) {\r\n            stmt.context.registration = this.lrs.registration;\r\n        }\r\n        if (this.lrs.activity_platform) {\r\n            stmt.context.platform = this.lrs.activity_platform;\r\n        }\r\n    };\r\n\r\n    // tests the configuration of the lrs object\r\n    XAPIWrapper.prototype.testConfig = testConfig;\r\n\r\n    // writes to the console if available\r\n    XAPIWrapper.prototype.log = log;\r\n\r\n    // Default encoding\r\n    XAPIWrapper.prototype.defaultEncoding = 'utf-8';\r\n\r\n    /*\r\n     * Send a single statement to the LRS. Makes a Javascript object\r\n     * with the statement id as 'id' available to the callback function.\r\n     * @param {object} stmt   statement object to send\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     *            and an object with an id property assigned the id\r\n     *            of the statement\r\n     * @return {object} object containing xhr object and id of statement\r\n     * @example\r\n     * // Send Statement\r\n     * var stmt = {\"actor\" : {\"mbox\" : \"mailto:tom@example.com\"},\r\n     *             \"verb\" : {\"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n     *                       \"display\" : {\"en-US\" : \"answered\"}},\r\n     *             \"object\" : {\"id\" : \"http://adlnet.gov/expapi/activities/question\"}};\r\n     * var resp_obj = ADL.XAPIWrapper.sendStatement(stmt);\r\n     * ADL.XAPIWrapper.log(\"[\" + resp_obj.id + \"]: \" + resp_obj.xhr.status + \" - \" + resp_obj.xhr.statusText);\r\n     * >> [3e616d1c-5394-42dc-a3aa-29414f8f0dfe]: 204 - NO CONTENT\r\n     *\r\n     * // Send Statement with Callback\r\n     * var stmt = {\"actor\" : {\"mbox\" : \"mailto:tom@example.com\"},\r\n     *             \"verb\" : {\"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n     *                       \"display\" : {\"en-US\" : \"answered\"}},\r\n     *             \"object\" : {\"id\" : \"http://adlnet.gov/expapi/activities/question\"}};\r\n     * ADL.XAPIWrapper.sendStatement(stmt, function(resp, obj){\r\n     *     ADL.XAPIWrapper.log(\"[\" + obj.id + \"]: \" + resp.status + \" - \" + resp.statusText);});\r\n     * >> [4edfe763-8b84-41f1-a355-78b7601a6fe8]: 204 - NO CONTENT\r\n     */\r\n    XAPIWrapper.prototype.sendStatement = function(stmt, callback, attachments)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            this.prepareStatement(stmt);\r\n            var id;\r\n            if (stmt['id'])\r\n            {\r\n                id = stmt['id'];\r\n            }\r\n            else\r\n            {\r\n                id = ADL.ruuid();\r\n                stmt['id'] = id;\r\n            }\r\n\r\n            var payload = JSON.stringify(stmt);\r\n            var extraHeaders = null;\r\n            if(attachments && attachments.length > 0)\r\n            {\r\n                extraHeaders = {}\r\n                payload = this.buildMultipartPost(stmt,attachments,extraHeaders);\r\n            }\r\n            var resp = ADL.XHR_request(this.lrs, this.lrs.endpoint+\"statements\",\r\n                \"POST\", payload, this.lrs.auth, callback, {\"id\":id}, null, extraHeaders,\r\n                this.withCredentials, this.strictCallbacks);\r\n            if (!callback)\r\n                return {\"xhr\":resp,\r\n                        \"id\" :id};\r\n        }\r\n    };\r\n\r\n    XAPIWrapper.prototype.stringToArrayBuffer = function(content, encoding)\r\n    {\r\n        encoding = encoding || ADL.XAPIWrapper.defaultEncoding;\r\n\r\n        return new TextEncoder(encoding).encode(content).buffer;\r\n    };\r\n\r\n    XAPIWrapper.prototype.stringFromArrayBuffer = function(content, encoding) {\r\n        encoding = encoding || ADL.XAPIWrapper.defaultEncoding;\r\n\r\n        return new TextDecoder(encoding).decode(content);\r\n    };\r\n\r\n    /*\r\n    * Build the post body to include the multipart boundries, edit the statement to include the attachment types\r\n    * extraHeaders should be an object. It will have the multipart boundary value set\r\n    * attachments should be an array of objects of the type\r\n    * {\r\n          type:\"signature\" || {\r\n              usageType : URI,\r\n              display: Language-map\r\n              description: Language-map\r\n          },\r\n          value : a UTF8 string containing the binary data of the attachment. For string values, this can just be the JS string.\r\n       }\r\n    */\r\n    XAPIWrapper.prototype.buildMultipartPost = function(statement, attachments, extraHeaders)\r\n    {\r\n        statement.attachments = [];\r\n        for (var i = 0; i < attachments.length; i++) {\r\n            // Replace the term 'signature' with the hard coded definition for a signature attachment\r\n            if (attachments[i].type == \"signature\") {\r\n                attachments[i].type = {\r\n                   \"usageType\": \"http://adlnet.gov/expapi/attachments/signature\",\r\n                   \"display\": {\r\n                    \"en-US\": \"A JWT signature\"\r\n                   },\r\n                   \"description\": {\r\n                    \"en-US\": \"A signature proving the statement was not modified\"\r\n                   },\r\n                   \"contentType\": \"application/octet-stream\"\r\n                }\r\n            }\r\n\r\n            if (typeof attachments[i].value === 'string') {\r\n                // Convert the string value to an array buffer.\r\n                attachments[i].value = this.stringToArrayBuffer(attachments[i].value);\r\n            }\r\n\r\n            // Compute the length and the sha2 of the attachment\r\n            attachments[i].type.length = attachments[i].value.byteLength;\r\n            attachments[i].type.sha2 = toSHA256(attachments[i].value);\r\n\r\n            // Attach the attachment metadata to the statement.\r\n            statement.attachments.push(attachments[i].type);\r\n        }\r\n\r\n        var blobParts = [];\r\n        var boundary = (Math.random() + ' ').substring(2,10) + (Math.random() + ' ').substring(2,10);\r\n\r\n        extraHeaders[\"Content-Type\"] = \"multipart/mixed; boundary=\" + boundary;\r\n\r\n        var CRLF = \"\\r\\n\";\r\n        var header = [\r\n            \"--\" + boundary,\r\n            \"Content-Type: application/json\",\r\n            \"Content-Disposition: form-data; name=\\\"statement\\\"\",\r\n            \"\",\r\n            JSON.stringify(statement)\r\n        ].join(CRLF) + CRLF;\r\n\r\n        blobParts.push(header);\r\n\r\n        for (var i in attachments) {\r\n            if (attachments.hasOwnProperty(i)) {\r\n                var attachmentHeader = [\r\n                    \"--\" + boundary,\r\n                    \"Content-Type: \" + attachments[i].type.contentType,\r\n                    \"Content-Transfer-Encoding: binary\",\r\n                    \"X-Experience-API-Hash: \" + attachments[i].type.sha2\r\n                ].join(CRLF) + CRLF + CRLF;\r\n\r\n                blobParts.push(attachmentHeader);\r\n                blobParts.push(attachments[i].value);\r\n            }\r\n        }\r\n\r\n        blobParts.push(CRLF + \"--\" + boundary + \"--\" + CRLF);\r\n\r\n        return new Blob(blobParts);\r\n    }\r\n    /*\r\n     * Send a list of statements to the LRS.\r\n     * @param {array} stmtArray   the list of statement objects to send\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object\r\n     * @example\r\n     * var stmt = {\"actor\" : {\"mbox\" : \"mailto:tom@example.com\"},\r\n     *             \"verb\" : {\"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n     *                       \"display\" : {\"en-US\" : \"answered\"}},\r\n     *             \"object\" : {\"id\" : \"http://adlnet.gov/expapi/activities/question\"}};\r\n     * var resp_obj = ADL.XAPIWrapper.sendStatement(stmt);\r\n     * ADL.XAPIWrapper.getStatements({\"statementId\":resp_obj.id});\r\n     * >> {\"version\": \"1.0.0\",\r\n     *     \"timestamp\": \"2013-09-09 21:36:40.185841+00:00\",\r\n     *     \"object\": {\"id\": \"http://adlnet.gov/expapi/activities/question\", \"objectType\": \"Activity\"},\r\n     *     \"actor\": {\"mbox\": \"mailto:tom@example.com\", \"name\": \"tom creighton\", \"objectType\": \"Agent\"},\r\n     *     \"stored\": \"2013-09-09 21:36:40.186124+00:00\",\r\n     *     \"verb\": {\"id\": \"http://adlnet.gov/expapi/verbs/answered\", \"display\": {\"en-US\": \"answered\"}},\r\n     *     \"authority\": {\"mbox\": \"mailto:tom@adlnet.gov\", \"name\": \"tom\", \"objectType\": \"Agent\"},\r\n     *     \"context\": {\"registration\": \"51a6f860-1997-11e3-8ffd-0800200c9a66\"},\r\n     *     \"id\": \"ea9c1d01-0606-4ec7-8e5d-20f87b1211ed\"}\r\n     */\r\n    XAPIWrapper.prototype.sendStatements = function(stmtArray, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            for(var i in stmtArray)\r\n            {\r\n                if (stmtArray.hasOwnProperty(i))\r\n                    this.prepareStatement(stmtArray[i]);\r\n            }\r\n            var resp = ADL.XHR_request(this.lrs,this.lrs.endpoint+\"statements\",\r\n                \"POST\", JSON.stringify(stmtArray), this.lrs.auth, callback, null,\r\n                false, null, this.withCredentials, this.strictCallbacks);\r\n\r\n\r\n            if (!callback)\r\n            {\r\n                return resp;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Get statement(s) based on the searchparams or more url.\r\n     * @param {object} searchparams   an ADL.XAPIWrapper.searchParams object of\r\n     *                key(search parameter)-value(parameter value) pairs.\r\n     *                Example:\r\n     *                  var myparams = ADL.XAPIWrapper.searchParams();\r\n     *                  myparams['verb'] = ADL.verbs.completed.id;\r\n     *                  var completedStmts = ADL.XAPIWrapper.getStatements(myparams);\r\n     * @param {string} more   the more url found in the StatementResults object, if there are more\r\n     *        statements available based on your get statements request. Pass the\r\n     *        more url as this parameter to retrieve those statements.\r\n     * @param {function} [callback] - function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var ret = ADL.XAPIWrapper.getStatements();\r\n     * if (ret)\r\n     *     ADL.XAPIWrapper.log(ret.statements);\r\n     *\r\n     * >> <Array of statements>\r\n     */\r\n    XAPIWrapper.prototype.getStatements = function(searchparams, more, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"statements\";\r\n            if (more)\r\n            {\r\n                url = this.base + more;\r\n            }\r\n            else\r\n            {\r\n                var urlparams = new Array();\r\n\r\n                for (s in searchparams)\r\n                {\r\n                    if (searchparams.hasOwnProperty(s))\r\n                    {\r\n                        if (s == \"until\" || s == \"since\") {\r\n                            var d = new Date(searchparams[s]);\r\n                            urlparams.push(s + \"=\" + encodeURIComponent(d.toISOString()));\r\n                        } else {\r\n                            urlparams.push(s + \"=\" + encodeURIComponent(searchparams[s]));\r\n                        }\r\n                    }\r\n                }\r\n                if (urlparams.length > 0)\r\n                    url = url + \"?\" + urlparams.join(\"&\");\r\n            }\r\n\r\n            var res = ADL.XHR_request(this.lrs,url, \"GET\", null, this.lrs.auth,\r\n                callback, null, false, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(res === undefined || res.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(res.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return res.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Gets the Activity object from the LRS.\r\n     * @param {string} activityid   the id of the Activity to get\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var res = ADL.XAPIWrapper.getActivities(\"http://adlnet.gov/expapi/activities/question\");\r\n     * ADL.XAPIWrapper.log(res);\r\n     * >> <Activity object>\r\n     */\r\n    XAPIWrapper.prototype.getActivities = function(activityid, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities?activityId=<activityid>\";\r\n            url = url.replace('<activityid>', encodeURIComponent(activityid));\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Store activity state in the LRS\r\n     * @param {string} activityid   the id of the Activity this state is about\r\n     * @param {object} agent   the agent this Activity state is related to\r\n     * @param {string} stateid   the id you want associated with this state\r\n     * @param {string} [registration]   the registraton id associated with this state\r\n     * @param {string} stateval   the state\r\n     * @param {string} [matchHash]    the hash of the state to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current state or * to indicate no previous state\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {boolean} false if no activity state is included\r\n     * @example\r\n     * var stateval = {\"info\":\"the state info\"};\r\n     * ADL.XAPIWrapper.sendState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                    {\"mbox\":\"mailto:tom@example.com\"},\r\n     *                    \"questionstate\", null, stateval);\r\n     */\r\n    XAPIWrapper.prototype.sendState = function(activityid, agent, stateid, registration, stateval, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<stateid>',encodeURIComponent(stateid));\r\n\r\n            if (registration)\r\n            {\r\n                url += \"&registration=\" + encodeURIComponent(registration);\r\n            }\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var method = \"PUT\";\r\n            if (stateval)\r\n            {\r\n                if (stateval instanceof Array)\r\n                {\r\n                    stateval = JSON.stringify(stateval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                }\r\n                else if (stateval instanceof Object)\r\n                {\r\n                    stateval = JSON.stringify(stateval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                    method = \"POST\";\r\n                }\r\n                else\r\n                {\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/octet-stream\";\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.log(\"No activity state was included.\");\r\n                return false;\r\n            }\r\n            //(lrs, url, method, data, auth, callback, callbackargs, ignore404, extraHeaders)\r\n\r\n            ADL.XHR_request(this.lrs, url, method, stateval, this.lrs.auth, callback,\r\n                null, null, headers, this.withCredentials, this.strictCallbacks);\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Get activity state from the LRS\r\n     * @param {string} activityid   the id of the Activity this state is about\r\n     * @param {object} agent   the agent this Activity state is related to\r\n     * @param {string} [stateid]    the id of the state, if not included, the response will be a list of stateids\r\n     *            associated with the activity and agent)\r\n     * @param {string} [registration]   the registraton id associated with this state\r\n     * @param {object} [since]    date object or date string telling the LRS to return objects newer than the date supplied\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.getState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                  {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> {info: \"the state info\"}\r\n     */\r\n    XAPIWrapper.prototype.getState = function(activityid, agent, stateid, registration, since, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/state?activityId=<activity ID>&agent=<agent>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n\r\n            if (stateid)\r\n            {\r\n                url += \"&stateId=\" + encodeURIComponent(stateid);\r\n            }\r\n\r\n            if (registration)\r\n            {\r\n                url += \"&registration=\" + encodeURIComponent(registration);\r\n            }\r\n\r\n            if(since)\r\n            {\r\n                since = isDate(since);\r\n                if (since != null) {\r\n                    url += '&since=' + encodeURIComponent(since.toISOString());\r\n                }\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Delete activity state in the LRS\r\n     * @param {string} activityid   the id of the Activity this state is about\r\n     * @param {object} agent   the agent this Activity state is related to\r\n     * @param {string} stateid   the id you want associated with this state\r\n     * @param {string} [registration]   the registraton id associated with this state\r\n     * @param {string} [matchHash]    the hash of the state to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current state or * to indicate no previous state\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var stateval = {\"info\":\"the state info\"};\r\n     * ADL.XAPIWrapper.sendState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                           {\"mbox\":\"mailto:tom@example.com\"},\r\n     *                           \"questionstate\", null, stateval);\r\n     * ADL.XAPIWrapper.getState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                         {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> {info: \"the state info\"}\r\n     *\r\n     * ADL.XAPIWrapper.deleteState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                         {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> XMLHttpRequest {statusText: \"NO CONTENT\", status: 204, response: \"\", responseType: \"\", responseXML: null…}\r\n     *\r\n     * ADL.XAPIWrapper.getState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                         {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> 404\r\n     */\r\n    XAPIWrapper.prototype.deleteState = function(activityid, agent, stateid, registration, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<stateid>',encodeURIComponent(stateid));\r\n\r\n            if (registration)\r\n            {\r\n                url += \"&registration=\" + encodeURIComponent(registration);\r\n            }\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"DELETE\", null, this.lrs.auth,\r\n                callback, null, false, headers, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Store activity profile in the LRS\r\n     * @param {string} activityid   the id of the Activity this profile is about\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} profileval   the profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {bolean} false if no activity profile is included\r\n     * @example\r\n     * var profile = {\"info\":\"the profile\"};\r\n     * ADL.XAPIWrapper.sendActivityProfile(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                                     \"actprofile\", profile, null, \"*\");\r\n     */\r\n    XAPIWrapper.prototype.sendActivityProfile = function(activityid, profileid, profileval, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/profile?activityId=<activity ID>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var method = \"PUT\";\r\n            if (profileval)\r\n            {\r\n                if (profileval instanceof Array)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                }\r\n                else if (profileval instanceof Object)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                    method = \"POST\";\r\n                }\r\n                else\r\n                {\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/octet-stream\";\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.log(\"No activity profile was included.\");\r\n                return false;\r\n            }\r\n\r\n            ADL.XHR_request(this.lrs, url, method, profileval, this.lrs.auth, callback,\r\n                null, false, headers, this.withCredentials, this.strictCallbacks);\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Get activity profile from the LRS\r\n     * @param {string} activityid   the id of the Activity this profile is about\r\n     * @param {string} [profileid]    the id of the profile, if not included, the response will be a list of profileids\r\n     *              associated with the activity\r\n     * @param {object} [since]    date object or date string telling the LRS to return objects newer than the date supplied\r\n     * @param {function [callback]    function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.getActivityProfile(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                                    \"actprofile\", null,\r\n     *                                    function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\r\n     * >> {info: \"the profile\"}\r\n     */\r\n    XAPIWrapper.prototype.getActivityProfile = function(activityid, profileid, since, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/profile?activityId=<activity ID>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n\r\n            if (profileid)\r\n            {\r\n                url += \"&profileId=\" + encodeURIComponent(profileid);\r\n            }\r\n\r\n            if(since)\r\n            {\r\n                since = isDate(since);\r\n                if (since != null) {\r\n                    url += '&since=' + encodeURIComponent(since.toISOString());\r\n                }\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Delete activity profile in the LRS\r\n     * @param {string} activityid   the id of the Activity this profile is about\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.deleteActivityProfile(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                                       \"actprofile\");\r\n     * >> XMLHttpRequest {statusText: \"NO CONTENT\", status: 204, response: \"\", responseType: \"\", responseXML: null…}\r\n     */\r\n    XAPIWrapper.prototype.deleteActivityProfile = function(activityid, profileid, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/profile?activityId=<activity ID>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"DELETE\", null, this.lrs.auth,\r\n                callback, null, false, headers,this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Gets the Person object from the LRS based on an agent object.\r\n     * The Person object may contain more information about an agent.\r\n     * See the xAPI Spec for details.\r\n     * @param {object} agent   the agent object to get a Person\r\n     * @param {function [callback]    function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var res = ADL.XAPIWrapper.getAgents({\"mbox\":\"mailto:tom@example.com\"});\r\n     * ADL.XAPIWrapper.log(res);\r\n     * >> <Person object>\r\n     */\r\n    XAPIWrapper.prototype.getAgents = function(agent, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"agents?agent=<agent>\";\r\n            url = url.replace('<agent>', encodeURIComponent(JSON.stringify(agent)));\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Store agent profile in the LRS\r\n     * @param {object} agent   the agent this profile is related to\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} profileval   the profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} false if no agent profile is included\r\n     * @example\r\n     * var profile = {\"info\":\"the agent profile\"};\r\n     * ADL.XAPIWrapper.sendAgentProfile({\"mbox\":\"mailto:tom@example.com\"},\r\n     *                                   \"agentprofile\", profile, null, \"*\");\r\n     */\r\n    XAPIWrapper.prototype.sendAgentProfile = function(agent, profileid, profileval, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"agents/profile?agent=<agent>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var method = \"PUT\";\r\n            if (profileval)\r\n            {\r\n                if (profileval instanceof Array)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                }\r\n                else if (profileval instanceof Object)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                    method = \"POST\";\r\n                }\r\n                else\r\n                {\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/octet-stream\";\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.log(\"No agent profile was included.\");\r\n                return false;\r\n            }\r\n\r\n            ADL.XHR_request(this.lrs, url, method, profileval, this.lrs.auth, callback,\r\n                null, false, headers, this.withCredentials, this.strictCallbacks);\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Get agnet profile from the LRS\r\n     * @param {object} agent   the agent associated with this profile\r\n     * @param {string} [profileid]    the id of the profile, if not included, the response will be a list of profileids\r\n     *              associated with the agent\r\n     * @param {object} [since]    date object or date string telling the LRS to return objects newer than the date supplied\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.getAgentProfile({\"mbox\":\"mailto:tom@example.com\"},\r\n     *                                  \"agentprofile\", null,\r\n     *                                  function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\r\n     * >> {info: \"the agent profile\"}\r\n     */\r\n    XAPIWrapper.prototype.getAgentProfile = function(agent, profileid, since, callback)\r\n    {\r\n        if (this.testConfig()){\r\n            var url = this.lrs.endpoint + \"agents/profile?agent=<agent>\";\r\n\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            if (profileid)\r\n            {\r\n                url += \"&profileId=\" + encodeURIComponent(profileid);\r\n            }\r\n\r\n            if(since)\r\n            {\r\n                since = isDate(since);\r\n                if (since != null) {\r\n                    url += '&since=' + encodeURIComponent(since.toISOString());\r\n                }\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Delete agent profile in the LRS\r\n     * @param {oject} agent   the id of the Agent this profile is about\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.deleteAgentProfile({\"mbox\":\"mailto:tom@example.com\"},\r\n     *                                     \"agentprofile\");\r\n     * >> XMLHttpRequest {statusText: \"NO CONTENT\", status: 204, response: \"\", responseType: \"\", responseXML: null…}\r\n     */\r\n    XAPIWrapper.prototype.deleteAgentProfile = function(agent, profileid, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"agents/profile?agent=<agent>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"DELETE\", null, this.lrs.auth,\r\n                callback, null, false, headers, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Tests the configuration of the lrs object\r\n     */\r\n    function testConfig()\r\n    {\r\n        try\r\n        {\r\n            return this.lrs.endpoint != undefined && this.lrs.endpoint != \"\";\r\n        }\r\n        catch(e)\r\n        {\r\n            return false\r\n        }\r\n    }\r\n\r\n    // outputs the message to the console if available\r\n    function log(message)\r\n    {\r\n        if (!log.debug) return false;\r\n        try\r\n        {\r\n            console.log(message);\r\n            return true;\r\n        }\r\n        catch(e){return false;}\r\n    }\r\n\r\n    // merges two object\r\n    function mergeRecursive(obj1, obj2)\r\n    {\r\n        for (var p in obj2)\r\n        {\r\n            if (obj2.hasOwnProperty(p) == false)\r\n                continue;\r\n\r\n            var prop = obj2[p];\r\n            log(p + \" : \" + prop);\r\n            try\r\n            {\r\n                // Property in destination object set; update its value.\r\n                if ( obj2[p].constructor==Object )\r\n                {\r\n                    obj1[p] = mergeRecursive(obj1[p], obj2[p]);\r\n\r\n                }\r\n                else\r\n                {\r\n                  if (obj1 == undefined)\r\n                  {\r\n                    obj1 = new Object();\r\n                  }\r\n                    obj1[p] = obj2[p];\r\n                }\r\n            }\r\n            catch(e)\r\n            {\r\n              if (obj1 == undefined)\r\n              {\r\n                obj1 = new Object();\r\n              }\r\n              // Property in destination object not set; create it and set its value.\r\n              obj1[p] = obj2[p];\r\n            }\r\n        }\r\n\r\n        return obj1;\r\n    }\r\n\r\n    // iniitializes an lrs object with settings from\r\n    // a config file and from the url query string\r\n    function getLRSObject(config)\r\n    {\r\n        var lrsProps = [\"endpoint\",\"auth\",\"actor\",\"registration\",\"activity_id\", \"grouping\", \"activity_platform\"];\r\n        var lrs = new Object();\r\n        var qsVars, prop;\r\n\r\n        qsVars = parseQueryString();\r\n        if (qsVars !== undefined && Object.keys(qsVars).length !== 0) {\r\n            for (var i = 0; i<lrsProps.length; i++){\r\n                prop = lrsProps[i];\r\n                if (qsVars[prop]){\r\n                    lrs[prop] = qsVars[prop];\r\n                    delete qsVars[prop];\r\n                }\r\n            }\r\n            if (Object.keys(qsVars).length !== 0) {\r\n              lrs.extended = qsVars;\r\n            }\r\n\r\n            lrs = mergeRecursive(config, lrs);\r\n        }\r\n        else {\r\n            lrs = config;\r\n        }\r\n\r\n        return lrs;\r\n    }\r\n\r\n    // parses the params in the url query string\r\n    function parseQueryString()\r\n    {\r\n        var qs, pairs, pair, ii, parsed;\r\n\r\n        qs = location.search.substr(1);\r\n\r\n        pairs = qs.split('&');\r\n        parsed = {};\r\n        for ( ii = 0; ii < pairs.length; ii++) {\r\n            pair = pairs[ii].split('=');\r\n            if (pair.length === 2 && pair[0]) {\r\n                parsed[pair[0]] = decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n\r\n        return parsed;\r\n    }\r\n\r\n\r\n    function delay()\r\n    {\r\n        var xhr = new XMLHttpRequest();\r\n        var url = location + '?forcenocache='+ADL.ruuid();\r\n        xhr.open('GET', url, false);\r\n        xhr.send(null);\r\n    }\r\n\r\n    var isNode = Boolean(!root.document);\r\n\r\n    // Node shim for browser location\r\n    var location = isNode ?\r\n        // Node\r\n        {\r\n            search: \"\",\r\n            protocol: \"https:\"\r\n        } :\r\n        // Browser\r\n        root.location;\r\n    /**\r\n     * Cross environment implementation of a url parser\r\n     * @param  {string} url  Url to parse\r\n     * @return {object}  Parsed url\r\n     */\r\n    function parseUrl(url) {\r\n        // Node\r\n        if (isNode) return require(\"url\").parse(url);\r\n\r\n        // Brower\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        return a;\r\n    }\r\n\r\n    // If in node, create a loose SHIM for XMLHttpRequest API\r\n    var XMLHttpRequest = root.XMLHttpRequest;\r\n    isNode && (function() {\r\n        XMLHttpRequest = function XMLHttpRequest() {\r\n            this.method = \"GET\";\r\n            this.url = null;\r\n            this.async = true;\r\n            this.headers = {};\r\n        };\r\n        XMLHttpRequest.prototype = {\r\n\r\n            open: function(method, url, async)\r\n            {\r\n\r\n                if (async === false) {\r\n                    throw \"ADL xAPIWrapper does not support synchronous http requests in node\";\r\n                }\r\n\r\n                this.method = method;\r\n                this.url = url;\r\n                this.withCredentials = true;\r\n                this.crossDomain = true;\r\n                this.responseText = \"\";\r\n                this.responseJSON = null;\r\n                this.readyState = 0;\r\n                this.status = 0;\r\n                this.onreadystatechange = function() {};\r\n                this.onerror = function(error) {};\r\n                this.onload = function() {};\r\n            },\r\n\r\n            setRequestHeader: function(name, value)\r\n            {\r\n                this.headers[name] = value;\r\n            },\r\n\r\n            send: function(data)\r\n            {\r\n                var http = this.url.includes(\"https:\") ? require('https') : require(\"http\");\r\n                var options = {\r\n                    method: this.method,\r\n                    headers: this.headers\r\n                };\r\n                var parsedUrl = parseUrl(this.url);\r\n                for (var k in parsedUrl) {\r\n                    options[k] = parsedUrl[k];\r\n                }\r\n                var req = http.request(options, function (res) {\r\n                    res.setEncoding('utf8');\r\n                    this.status = res.statusCode;\r\n                    res.on('data', function (d) {\r\n                        this.responseText+=d;\r\n                    }.bind(this));\r\n                    res.on('end', function () {\r\n                        this.readyState = 4;\r\n                        try {\r\n                            this.responseJSON = JSON.parse(this.responseText);\r\n                        } catch(error) {\r\n                            this.responseJSON = null;\r\n                        }\r\n                        this.onload();\r\n                    }.bind(this));\r\n                }.bind(this));\r\n                req.on('error', function (e) {\r\n                    this.readyState = 4;\r\n                    this.onerror();\r\n                }.bind(this));\r\n                req.end(data);\r\n            }\r\n\r\n        };\r\n\r\n     })();\r\n    /*\r\n     * formats a request in a way that IE will allow\r\n     * @param {string} method   the http request method (ex: \"PUT\", \"GET\")\r\n     * @param {string} url   the url to the request (ex: ADL.XAPIWrapper.lrs.endpoint + \"statements\")\r\n     * @param {array} [headers]   headers to include in the request\r\n     * @param {string} [data]   the body of the request, if there is one\r\n     * @return {object} xhr response object\r\n     */\r\n    function ie_request(method, url, headers, data)\r\n    {\r\n        var newUrl = url;\r\n\r\n        //Everything that was on query string goes into form vars\r\n        var formData = new Array();\r\n        var qsIndex = newUrl.indexOf('?');\r\n        if(qsIndex > 0){\r\n            formData.push(newUrl.substr(qsIndex+1));\r\n            newUrl = newUrl.substr(0, qsIndex);\r\n        }\r\n\r\n        //Method has to go on querystring, and nothing else\r\n        newUrl = newUrl + '?method=' + method;\r\n\r\n        //Headers\r\n        if(headers !== null){\r\n            for (var headerName in headers) {\r\n                if (headers.hasOwnProperty(headerName))\r\n                    formData.push(headerName + \"=\" + encodeURIComponent(headers[headerName]));\r\n            }\r\n        }\r\n\r\n        //The original data is repackaged as \"content\" form var\r\n        if(data !== null){\r\n            formData.push('content=' + encodeURIComponent(data));\r\n        }\r\n\r\n        return {\r\n            \"method\":\"POST\",\r\n            \"url\":newUrl,\r\n            \"headers\":{},\r\n            \"data\":formData.join(\"&\")\r\n        };\r\n    }\r\n\r\n    /*!\r\n    Excerpt from: Math.uuid.js (v1.4)\r\n    http://www.broofa.com\r\n    mailto:robert@broofa.com\r\n    Copyright (c) 2010 Robert Kieffer\r\n    Dual licensed under the MIT and GPL licenses.\r\n    */\r\n    ADL.ruuid = function()\r\n    {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n                var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n                return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /*\r\n     * dateFromISOString\r\n     * parses an ISO string into a date object\r\n     * isostr - the ISO string\r\n     */\r\n    ADL.dateFromISOString = function(isostr)\r\n    {\r\n        var regexp = \"([0-9]{4})(-([0-9]{2})(-([0-9]{2})\" +\r\n            \"([T| ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\\.([0-9]+))?)?\" +\r\n            \"(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?\";\r\n        var d = isostr.match(new RegExp(regexp));\r\n\r\n        var offset = 0;\r\n        var date = new Date(d[1], 0, 1);\r\n\r\n        if (d[3]) { date.setMonth(d[3] - 1); }\r\n        if (d[5]) { date.setDate(d[5]); }\r\n        if (d[7]) { date.setHours(d[7]); }\r\n        if (d[8]) { date.setMinutes(d[8]); }\r\n        if (d[10]) { date.setSeconds(d[10]); }\r\n        if (d[12]) { date.setMilliseconds(Number(\"0.\" + d[12]) * 1000); }\r\n        if (d[14]) {\r\n            offset = (Number(d[16]) * 60) + Number(d[17]);\r\n            offset *= ((d[15] == '-') ? 1 : -1);\r\n        }\r\n\r\n        offset -= date.getTimezoneOffset();\r\n        time = (Number(date) + (offset * 60 * 1000));\r\n\r\n        var dateToReturn = new Date();\r\n        dateToReturn.setTime(Number(time));\r\n        return dateToReturn;\r\n    };\r\n\r\n    // Synchronous if callback is not provided (not recommended)\r\n    /*\r\n     * makes a request to a server (if possible, use functions provided in XAPIWrapper)\r\n     * @param {string} lrs   the lrs connection info, such as endpoint, auth, etc\r\n     * @param {string} url   the url of this request\r\n     * @param {string} method   the http request method\r\n     * @param {string} data   the payload\r\n     * @param {string} auth   the value for the Authorization header\r\n     * @param {function} callback   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     * @param {object} [callbackargs]   additional javascript object to be passed to the callback function\r\n     * @param {boolean} ignore404    allow page not found errors to pass\r\n     * @param {object} extraHeaders   other header key-values to be added to this request\r\n     * @param {boolean} withCredentials\r\n     * @param {boolean} strictCallbacks Callback must be executed and first param is error or null if no error\r\n     * @return {object} xhr response object\r\n     */\r\n    ADL.XHR_request = function(lrs, url, method, data, auth, callback, callbackargs, ignore404, extraHeaders, withCredentials, strictCallbacks)\r\n    {\r\n        \"use strict\";\r\n\r\n        var xhr,\r\n            finished = false,\r\n            xDomainRequest = false,\r\n            ieXDomain = false,\r\n            ieModeRequest,\r\n            urlparts = url.toLowerCase().match(/^(.+):\\/\\/([^:\\/]*):?(\\d+)?(\\/.*)?$/),\r\n            urlPort,\r\n            result,\r\n            extended,\r\n            prop,\r\n            until;\r\n\r\n        //Consolidate headers\r\n        var headers = {};\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n        headers[\"Authorization\"] = auth;\r\n        headers['X-Experience-API-Version'] = ADL.XAPIWrapper.xapiVersion;\r\n        if(extraHeaders !== null){\r\n            for (var headerName in extraHeaders) {\r\n                if (extraHeaders.hasOwnProperty(headerName))\r\n                    headers[headerName] = extraHeaders[headerName];\r\n            }\r\n        }\r\n\r\n        //See if this really is a cross domain\r\n        xDomainRequest = (location.protocol.toLowerCase() !== urlparts[1] || location.hostname.toLowerCase() !== urlparts[2]);\r\n        if (!xDomainRequest) {\r\n            urlPort = (urlparts[3] === null ? ( urlparts[1] === 'http' ? '80' : '443') : urlparts[3]);\r\n            xDomainRequest = (urlPort === location.port);\r\n        }\r\n\r\n        //Add extended LMS-specified values to the URL\r\n        if (lrs !== null && lrs.extended !== undefined) {\r\n            extended = new Array();\r\n            for (prop in lrs.extended) {\r\n                extended.push(prop + \"=\" + encodeURIComponent(lrs.extended[prop]));\r\n            }\r\n            if (extended.length > 0) {\r\n                url += (url.indexOf(\"?\") > -1 ? \"&\" : \"?\") + extended.join(\"&\");\r\n            }\r\n        }\r\n\r\n        //If it's not cross domain or we're not using IE, use the usual XmlHttpRequest\r\n        var windowsVersionCheck = root.XDomainRequest && (root.XMLHttpRequest && new XMLHttpRequest().responseType === undefined);\r\n        if (!xDomainRequest || windowsVersionCheck === undefined || windowsVersionCheck===false) {\r\n            xhr = new XMLHttpRequest();\r\n            xhr.withCredentials = withCredentials; //allow cross domain cookie based auth\r\n            xhr.open(method, url, callback != null);\r\n            for(var headerName in headers){\r\n                xhr.setRequestHeader(headerName, headers[headerName]);\r\n            }\r\n        }\r\n        //Otherwise, use IE's XDomainRequest object\r\n        else {\r\n            ieXDomain = true;\r\n            ieModeRequest = ie_request(method, url, headers, data);\r\n            xhr = new XDomainRequest();\r\n            xhr.open(ieModeRequest.method, ieModeRequest.url);\r\n        }\r\n\r\n        //Setup request callback\r\n        function requestComplete() {\r\n            if(!finished){\r\n                // may be in sync or async mode, using XMLHttpRequest or IE XDomainRequest, onreadystatechange or\r\n                // onload or both might fire depending upon browser, just covering all bases with event hooks and\r\n                // using 'finished' flag to avoid triggering events multiple times\r\n                finished = true;\r\n                var notFoundOk = (ignore404 && xhr.status === 404);\r\n                if (xhr.status === undefined || (xhr.status >= 200 && xhr.status < 400) || notFoundOk) {\r\n                    if (callback) {\r\n                        if(callbackargs){\r\n                            strictCallbacks ? callback(null, xhr, callbackargs) : callback(xhr, callbackargs);\r\n                        }\r\n                        else {\r\n                          var body;\r\n\r\n                            try {\r\n                                body = JSON.parse(xhr.responseText);\r\n                            }\r\n                            catch(e){\r\n                                body = xhr.responseText;\r\n                            }\r\n\r\n                          strictCallbacks ? callback(null, xhr, body) : callback(xhr,body);\r\n                        }\r\n                    } else {\r\n                        result = xhr;\r\n                        return xhr;\r\n                    }\r\n                } else {\r\n                    var warning;\r\n                    try {\r\n                        warning = \"There was a problem communicating with the Learning Record Store. ( \"\r\n                            + xhr.status + \" | \" + xhr.response+ \" )\" + url\r\n                    } catch (ex) {\r\n                        warning = ex.toString();\r\n                    }\r\n                    ADL.XAPIWrapper.log(warning);\r\n                    ADL.xhrRequestOnError(xhr, method, url, callback, callbackargs, strictCallbacks);\r\n                    result = xhr;\r\n                    return xhr;\r\n                }\r\n            } else {\r\n                return result;\r\n            }\r\n        };\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n               return requestComplete();\r\n            }\r\n        };\r\n\r\n        xhr.onload = requestComplete;\r\n        xhr.onerror = requestComplete;\r\n        //xhr.onerror =  ADL.xhrRequestOnError(xhr, method, url);\r\n\r\n        xhr.send(ieXDomain ? ieModeRequest.data : data);\r\n\r\n        if (!callback) {\r\n            // synchronous\r\n            if (ieXDomain) {\r\n                // synchronous call in IE, with no asynchronous mode available.\r\n                until = 1000 + new Date();\r\n                while (new Date() < until && xhr.readyState !== 4 && !finished) {\r\n                    delay();\r\n                }\r\n            }\r\n            return requestComplete();\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Holder for custom global error callback\r\n     * @param {object} xhr   xhr object or null\r\n     * @param {string} method   XMLHttpRequest request method\r\n     * @param {string} url   full endpoint url\r\n     * @param {function} callback   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     * @param {object} [callbackargs]   additional javascript object to be passed to the callback function\r\n     * @param {boolean} strictCallbacks Callback must be executed and first param is error or null if no error\r\n     * @example\r\n     * ADL.xhrRequestOnError = function(xhr, method, url, callback, callbackargs) {\r\n     *   console.log(xhr);\r\n     *   alert(xhr.status + \" \" + xhr.statusText + \": \" + xhr.response);\r\n     * };\r\n     */\r\n    ADL.xhrRequestOnError = function(xhr, method, url, callback, callbackargs, strictCallbacks){\r\n        if (callback && strictCallbacks) {\r\n            var status = xhr ? xhr.status : undefined;\r\n            var error;\r\n            if (status) {\r\n                error = new Error('Request error: ' + xhr.status);\r\n            } else if (status === 0 || status === null) { // 0 and null = aborted\r\n                error = new Error('Request error: aborted');\r\n            } else {\r\n                error = new Error('Reqeust error: unknown');\r\n            }\r\n\r\n            if (callbackargs) {\r\n                callback(error, xhr, callbackargs);\r\n            } else {\r\n              var body;\r\n\r\n                try {\r\n                    body = JSON.parse(xhr.responseText);\r\n                } catch(e){\r\n                    body = xhr.responseText;\r\n                }\r\n\r\n              callback(error, xhr, body);\r\n            }\r\n        }\r\n    };\r\n\r\n    ADL.formatHash = function(hash)\r\n    {\r\n      return (hash===\"*\") ? hash : '\"'+hash+'\"';\r\n    }\r\n\r\n    ADL.XAPIWrapper = new XAPIWrapper(Config, false);\r\n\r","   ADL.activityTypes = {\r\n      \"assessment\": \"http://adlnet.gov/expapi/activities/assessment\",\r\n      \"attempt\": \"http://adlnet.gov/expapi/activities/attempt\",\r\n      \"course\": \"http://adlnet.gov/expapi/activities/course\",\r\n      \"file\": \"http://adlnet.gov/expapi/activities/file\",\r\n      \"interaction\": \"http://adlnet.gov/expapi/activities/interaction\",\r\n      \"lesson\": \"http://adlnet.gov/expapi/activities/lesson\",\r\n      \"link\": \"http://adlnet.gov/expapi/activities/link\",\r\n      \"media\": \"http://adlnet.gov/expapi/activities/media\",\r\n      \"meeting\": \"http://adlnet.gov/expapi/activities/meeting\",\r\n      \"module\": \"http://adlnet.gov/expapi/activities/module\",\r\n      \"objective\": \"http://adlnet.gov/expapi/activities/objective\",\r\n      \"performance\": \"http://adlnet.gov/expapi/activities/performance\",\r\n      \"profile\": \"http://adlnet.gov/expapi/activities/profile\",\r\n      \"question\": \"http://adlnet.gov/expapi/activities/question\",\r\n      \"simulation\": \"http://adlnet.gov/expapi/activities/simulation\"\r\n   };\r","   ADL.verbs = {\r\n      \"abandoned\" : {\r\n         \"id\" : \"https://w3id.org/xapi/adl/verbs/abandoned\",\r\n         \"display\" : {\"en-US\" : \"abandoned\"}\r\n      },\r\n      \"answered\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n         \"display\" : {\"de-DE\" : \"beantwortete\",\r\n                      \"en-US\" : \"answered\",\r\n                      \"fr-FR\" : \"a répondu\",\r\n                      \"es-ES\" : \"contestó\",\r\n                      \"ar-AR\" : \"أجاب\"}\r\n      },\r\n      \"asked\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/asked\",\r\n         \"display\" : {\"de-DE\" : \"fragte\",\r\n                      \"en-US\" : \"asked\",\r\n                      \"fr-FR\" : \"a demandé\",\r\n                      \"es-ES\" : \"preguntó\",\r\n                      \"ar-AR\" : \"طلب\"}\r\n      },\r\n      \"attempted\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/attempted\",\r\n         \"display\" : {\"de-DE\" : \"versuchte\",\r\n                      \"en-US\" : \"attempted\",\r\n                      \"fr-FR\" : \"a essayé\",\r\n                      \"es-ES\" : \"intentó\",\r\n                      \"ar-AR\" : \"حاول\"}\r\n      },\r\n      \"attended\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/attended\",\r\n         \"display\" : {\"de-DE\" : \"nahm teil an\",\r\n                      \"en-US\" : \"attended\",\r\n                      \"fr-FR\" : \"a suivi\",\r\n                      \"es-ES\" : \"asistió\",\r\n                      \"ar-AR\" : \"حضر\"}\r\n      },\r\n      \"commented\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/commented\",\r\n         \"display\" : {\"de-DE\" : \"kommentierte\",\r\n                      \"en-US\" : \"commented\",\r\n                      \"fr-FR\" : \"a commenté\",\r\n                      \"es-ES\" : \"comentó\",\r\n                      \"ar-AR\" : \"علق\"}\r\n      },\r\n      \"completed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/completed\",\r\n         \"display\" : {\"de-DE\" : \"beendete\",\r\n                      \"en-US\" : \"completed\",\r\n                      \"fr-FR\" : \"a terminé\",\r\n                      \"es-ES\" : \"completó\",\r\n                      \"ar-AR\" : \"أكمل\"}\r\n      },\r\n      \"exited\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/exited\",\r\n         \"display\" : {\"de-DE\" : \"verließ\",\r\n                      \"en-US\" : \"exited\",\r\n                      \"fr-FR\" : \"a quitté\",\r\n                      \"es-ES\" : \"salió\",\r\n                      \"ar-AR\" : \"خرج\"}\r\n      },\r\n      \"experienced\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/experienced\",\r\n         \"display\" : {\"de-DE\" : \"erlebte\",\r\n                      \"en-US\" : \"experienced\",\r\n                      \"fr-FR\" : \"a éprouvé\",\r\n                      \"es-ES\" : \"experimentó\",\r\n                      \"ar-AR\" : \"شاهد\"}\r\n      },\r\n      \"failed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/failed\",\r\n         \"display\" : {\"de-DE\" : \"verfehlte\",\r\n                      \"en-US\" : \"failed\",\r\n                      \"fr-FR\" : \"a échoué\",\r\n                      \"es-ES\" : \"fracasó\",\r\n                      \"ar-AR\" : \"فشل\"}\r\n      },\r\n      \"imported\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/imported\",\r\n         \"display\" : {\"de-DE\" : \"importierte\",\r\n                      \"en-US\" : \"imported\",\r\n                      \"fr-FR\" : \"a importé\",\r\n                      \"es-ES\" : \"importó\",\r\n                      \"ar-AR\" : \"مستورد\"}\r\n      },\r\n      \"initialized\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/initialized\",\r\n         \"display\" : {\"de-DE\" : \"initialisierte\",\r\n                      \"en-US\" : \"initialized\",\r\n                      \"fr-FR\" : \"a initialisé\",\r\n                      \"es-ES\" : \"inicializó\",\r\n                      \"ar-AR\" : \"بدأ\"}\r\n      },\r\n      \"interacted\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/interacted\",\r\n         \"display\" : {\"de-DE\" : \"interagierte\",\r\n                      \"en-US\" : \"interacted\",\r\n                      \"fr-FR\" : \"a interagi\",\r\n                      \"es-ES\" : \"interactuó\",\r\n                      \"ar-AR\" : \"تفاعل\"}\r\n      },\r\n      \"launched\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/launched\",\r\n         \"display\" : {\"de-DE\" : \"startete\",\r\n                      \"en-US\" : \"launched\",\r\n                      \"fr-FR\" : \"a lancé\",\r\n                      \"es-ES\" : \"lanzó\",\r\n                      \"ar-AR\" : \"أطلق\"}\r\n      },\r\n      \"mastered\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/mastered\",\r\n         \"display\" : {\"de-DE\" : \"meisterte\",\r\n                      \"en-US\" : \"mastered\",\r\n                      \"fr-FR\" : \"a maîtrisé\",\r\n                      \"es-ES\" : \"dominó\",\r\n                      \"ar-AR\" : \"أتقن\"}\r\n      },\r\n      \"passed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/passed\",\r\n         \"display\" : {\"de-DE\" : \"bestand\",\r\n                      \"en-US\" : \"passed\",\r\n                      \"fr-FR\" : \"a réussi\",\r\n                      \"es-ES\" : \"aprobó\",\r\n                      \"ar-AR\" : \"نجح\"}\r\n      },\r\n      \"preferred\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/preferred\",\r\n         \"display\" : {\"de-DE\" : \"bevorzugte\",\r\n                      \"en-US\" : \"preferred\",\r\n                      \"fr-FR\" : \"a préféré\",\r\n                      \"es-ES\" : \"prefirió\",\r\n                      \"ar-AR\" : \"فضل\"}\r\n      },\r\n      \"progressed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/progressed\",\r\n         \"display\" : {\"de-DE\" : \"machte Fortschritt mit\",\r\n                      \"en-US\" : \"progressed\",\r\n                      \"fr-FR\" : \"a progressé\",\r\n                      \"es-ES\" : \"progresó\",\r\n                      \"ar-AR\" : \"تقدم\"}\r\n      },\r\n      \"registered\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/registered\",\r\n         \"display\" : {\"de-DE\" : \"registrierte\",\r\n                      \"en-US\" : \"registered\",\r\n                      \"fr-FR\" : \"a enregistré\",\r\n                      \"es-ES\" : \"registró\",\r\n                      \"ar-AR\" : \"سجل\"}\r\n      },\r\n      \"responded\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/responded\",\r\n         \"display\" : {\"de-DE\" : \"reagierte\",\r\n                      \"en-US\" : \"responded\",\r\n                      \"fr-FR\" : \"a répondu\",\r\n                      \"es-ES\" : \"respondió\",\r\n                      \"ar-AR\" : \"استجاب\"}\r\n      },\r\n      \"resumed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/resumed\",\r\n         \"display\" : {\"de-DE\" : \"setzte fort\",\r\n                      \"en-US\" : \"resumed\",\r\n                      \"fr-FR\" : \"a repris\",\r\n                      \"es-ES\" : \"continuó\",\r\n                      \"ar-AR\" : \"استأنف\"}\r\n      },\r\n      \"satisfied\" : {\r\n         \"id\" : \"https://w3id.org/xapi/adl/verbs/satisfied\",\r\n         \"display\" : {\"de-DE\" : \"befriedigt\",\r\n                      \"en-US\" : \"satisfied\",\r\n                      \"fr-FR\" : \"satisfaite\",\r\n                      \"es-ES\" : \"satisfecho\",\r\n                      \"ar-AR\" : \"راض\"}\r\n      },\r\n      \"scored\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/scored\",\r\n         \"display\" : {\"de-DE\" : \"erreichte\",\r\n                      \"en-US\" : \"scored\",\r\n                      \"fr-FR\" : \"a marqué\",\r\n                      \"es-ES\" : \"anotó\",\r\n                      \"ar-AR\" : \"سحل النقاط\"}\r\n      },\r\n      \"shared\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/shared\",\r\n         \"display\" : {\"de-DE\" : \"teilte\",\r\n                      \"en-US\" : \"shared\",\r\n                      \"fr-FR\" : \"a partagé\",\r\n                      \"es-ES\" : \"compartió\",\r\n                      \"ar-AR\" : \"شارك\"}\r\n      },\r\n      \"suspended\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/suspended\",\r\n         \"display\" : {\"de-DE\" : \"pausierte\",\r\n                      \"en-US\" : \"suspended\",\r\n                      \"fr-FR\" : \"a suspendu\",\r\n                      \"es-ES\" : \"aplazó\",\r\n                      \"ar-AR\" : \"علق\"}\r\n      },\r\n      \"terminated\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/terminated\",\r\n         \"display\" : {\"de-DE\" : \"beendete\",\r\n                      \"en-US\" : \"terminated\",\r\n                      \"fr-FR\" : \"a terminé\",\r\n                      \"es-ES\" : \"terminó\",\r\n                      \"ar-AR\" : \"أنهى\"}\r\n      },\r\n      \"voided\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/voided\",\r\n         \"display\" : {\"de-DE\" : \"entwertete\",\r\n                      \"en-US\" : \"voided\",\r\n                      \"fr-FR\" : \"a annulé\",\r\n                      \"es-ES\" : \"anuló\",\r\n                      \"ar-AR\" : \"فرغ\"}\r\n      },\r\n      \"waived\" : {\r\n         \"id\" : \"https://w3id.org/xapi/adl/verbs/waived\",\r\n         \"display\" : {\"de-DE\" : \"verzichtet\",\r\n                      \"en-US\" : \"waived\",\r\n                      \"fr-FR\" : \"renoncé\",\r\n                      \"es-ES\" : \"renunciado\",\r\n                      \"ar-AR\" : \"تخلى\"}\r\n      }\r\n   };\r","\r\n  function _getobj(obj, path){\r\n    var parts = path.split('.');\r\n\r\n    var part = parts[0];\r\n    path = parts.slice(1).join('.');\r\n\r\n    if( !obj[part] ){\r\n      if( /\\[\\]$/.test(part) ){\r\n        part = part.slice(0,-2);\r\n        obj[part] = [];\r\n      }\r\n      else\r\n        obj[part] = {};\r\n    }\r\n\r\n    if( !path )\r\n      return obj[part];\r\n    else\r\n      return _getobj(obj[part], path);\r\n  }\r\n\r\n  /*******************************************************************************\r\n   * XAPIStatement - a convenience class to wrap statement objects\r\n   *\r\n   * This sub-API is supposed to make it easier to author valid xAPI statements\r\n   * by adding constructors and encouraging best practices. All objects in this\r\n   * API are fully JSON-compatible, so anything expecting an xAPI statement can\r\n   * take an improved statement and vice versa.\r\n   *\r\n   * A working knowledge of what exactly the LRS expects is still expected,\r\n   * but it's easier to map an 'I did this' statement to xAPI now.\r\n   *\r\n   * Tech note: All constructors also double as shallow clone functions. E.g.\r\n   *\r\n   *   var activity1 = new Activity('A walk in the park');\r\n   *   var activity2 = new Activity(activity1);\r\n   *   var activity3 = new Activity(stmt_from_lrs.object);\r\n   *\r\n   *******************************************************************************/\r\n\r\n  /*\r\n   * A convenient JSON-compatible xAPI statement wrapper\r\n   * All args are optional, but the statement may not be complete or valid\r\n   * Can also pass an Agent IFI, Verb ID, and an Activity ID in lieu of these args\r\n   * @param {string} [actor]   The Agent or Group committing the action described by the statement\r\n   * @param {string} [verb]   The Verb for the action described by the statement\r\n   * @param {string} [object]   The receiver of the action. An Agent, Group, Activity, SubStatement, or StatementRef\r\n   * @example\r\n   * var stmt = new ADL.XAPIStatement(\r\n   *     'mailto:steve.vergenz.ctr@adlnet.gov',\r\n   *    'http://adlnet.gov/expapi/verbs/launched',\r\n   *    'http://vwf.adlnet.gov/xapi/virtual_world_sandbox'\r\n   * );\r\n   * >> {\r\n   * \"actor\": {\r\n   *     \"objectType\": \"Agent\",\r\n   *     \"mbox\": \"mailto:steve.vergenz.ctr@adlnet.gov\" },\r\n   * \"verb\": {\r\n   *     \"id\": \"http://adlnet.gov/expapi/verbs/launched\" },\r\n   * \"object\": {\r\n   *     \"objectType\": \"Activity\",\r\n   *     \"id\": \"http://vwf.adlnet.gov/xapi/virtual_world_sandbox\" },\r\n   * \"result\": {\r\n   *      \"An optional property that represents a measured outcome related to the Statement in which it is included.\"}}\r\n   */\r\n  var XAPIStatement = function(actor, verb, object, result)\r\n  {\r\n\r\n    // initialize\r\n\r\n    // if first arg is an xapi statement, parse\r\n    if( actor && actor.actor && actor.verb && actor.object ){\r\n      var stmt = actor;\r\n      for(var i in stmt){\r\n        if(i != 'actor' && i != 'verb' && i != 'object')\r\n          this[i] = stmt[i];\r\n      }\r\n      actor = stmt.actor;\r\n      verb = stmt.verb;\r\n      object = stmt.object;\r\n    }\r\n    \r\n    if(actor){\r\n      if( actor instanceof Agent )\r\n        this.actor = actor;\r\n      else if(actor.objectType === 'Agent' || !actor.objectType)\r\n        this.actor = new Agent(actor);\r\n      else if(actor.objectType === 'Group')\r\n        this.actor = new Group(actor);\r\n    }\r\n    else this.actor = null;\r\n    \r\n    if(verb){\r\n      if( verb instanceof Verb )\r\n        this.verb = verb;\r\n      else\r\n        this.verb = new Verb(verb);\r\n    }\r\n    else this.verb = null;\r\n\r\n    // decide what kind of object was passed\r\n    if(object)\r\n    {\r\n      if( object.objectType === 'Activity' || !object.objectType ){\r\n        if( object instanceof Activity )\r\n          this.object = object;\r\n        else\r\n          this.object = new Activity(object);\r\n      }\r\n      else if( object.objectType === 'Agent' ){\r\n        if( object instanceof Agent )\r\n          this.object = object;\r\n        else\r\n          this.object = new Agent(object);\r\n      }\r\n      else if( object.objectType === 'Group' ){\r\n        if( object instanceof Group )\r\n          this.object = object;\r\n        else\r\n          this.object = new Group(object);\r\n      }\r\n      else if( object.objectType === 'StatementRef' ){\r\n        if( object instanceof StatementRef )\r\n          this.object = object;\r\n        else\r\n          this.object = new StatementRef(object);\r\n      }\r\n      else if( object.objectType === 'SubStatement' ){\r\n        if( object instanceof SubStatement )\r\n          this.object = object;\r\n        else\r\n          this.object = new SubStatement(object);\r\n      }\r\n      else this.object = null;\r\n    }\r\n    else this.object = null;\r\n    \r\n    // add support for result object\r\n    if(result)\r\n    {\r\n       this.result = result;\r\n    }\r\n\r\n    this.generateId = function(){\r\n      this.id = ADL.ruuid();\r\n    };\r\n  };\r\n\r\n  XAPIStatement.prototype.toString = function(){\r\n    return this.actor.toString() + \" \" + this.verb.toString() + \" \" + this.object.toString() + \" \" + this.result.toString();\r\n  };\r\n\r\n  XAPIStatement.prototype.isValid = function(){\r\n    return this.actor && this.actor.isValid() \r\n      && this.verb && this.verb.isValid() \r\n      && this.object && this.object.isValid()\r\n      && this.result && this.result.isValid();\r\n  };\r\n\r\n  XAPIStatement.prototype.generateRegistration = function(){\r\n    _getobj(this,'context').registration = ADL.ruuid();\r\n  };\r\n\r\n  XAPIStatement.prototype.addParentActivity = function(activity){\r\n    _getobj(this,'context.contextActivities.parent[]').push(new Activity(activity));\r\n  };\r\n\r\n  XAPIStatement.prototype.addGroupingActivity = function(activity){\r\n    _getobj(this,'context.contextActivities.grouping[]').push(new Activity(activity));\r\n  };\r\n\r\n  XAPIStatement.prototype.addOtherContextActivity = function(activity){\r\n    _getobj(this,'context.contextActivities.other[]').push(new Activity(activity));\r\n  };\r\n\r\n  \r\n  /*\r\n   * Provides an easy constructor for xAPI agent objects\r\n   * @param {string} identifier   One of the Inverse Functional Identifiers specified in the spec.\r\n   *     That is, an email, a hashed email, an OpenID, or an account object.\r\n   *     See (https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#inversefunctional)\r\n   * @param {string} [name]   The natural-language name of the agent\r\n   */\r\n  var Agent = function(identifier, name)\r\n  {\r\n    this.objectType = 'Agent';\r\n    this.name = name;\r\n\r\n    // figure out what type of identifier was given\r\n    if( identifier && (identifier.mbox || identifier.mbox_sha1sum || identifier.openid || identifier.account) ){\r\n      for(var i in identifier){\r\n        this[i] = identifier[i];\r\n      }\r\n    }\r\n    else if( /^mailto:/.test(identifier) ){\r\n      this.mbox = identifier;\r\n    }\r\n    else if( /^[0-9a-f]{40}$/i.test(identifier) ){\r\n      this.mbox_sha1sum = identifier;\r\n    }\r\n    else if( /^http[s]?:/.test(identifier) ){\r\n      this.openid = identifier;\r\n    }\r\n    else if( identifier && identifier.homePage && identifier.name ){\r\n      this.account = identifier;\r\n    }\r\n  };\r\n  Agent.prototype.toString = function(){\r\n    return this.name || this.mbox || this.openid || this.mbox_sha1sum || this.account.name;\r\n  };\r\n  Agent.prototype.isValid = function()\r\n  {\r\n    return this.mbox || this.mbox_sha1sum || this.openid\r\n      || (this.account.homePage && this.account.name)\r\n      || (this.objectType === 'Group' && this.member);\r\n  };\r\n\r\n  \r\n  /*\r\n   * A type of agent, can contain multiple agents\r\n   * @param {string} [identifier]   (optional if `members` specified) See Agent.\r\n   * @param {string} [members]    An array of Agents describing the membership of the group\r\n   * @param {string} [name]   The natural-language name of the agent\r\n   */\r\n  var Group = function(identifier, members, name)\r\n  {\r\n    Agent.call(this, identifier, name);\r\n    this.member = members;\r\n    this.objectType = 'Group';\r\n  };\r\n  Group.prototype = new Agent;\r\n\r\n  \r\n  /*\r\n   * Really only provides a convenient language map\r\n   * @param {string} id   The IRI of the action taken\r\n   * @param {string} [description]    An English-language description, or a Language Map\r\n   */\r\n  var Verb = function(id, description)\r\n  {\r\n    // if passed a verb object then copy and return\r\n    if( id && id.id ){\r\n      for(var i in id){\r\n        this[i] = id[i];\r\n      }\r\n      return;\r\n    }\r\n\r\n    // save id and build language map\r\n    this.id = id;\r\n    if(description)\r\n    {\r\n      if( typeof(description) === 'string' || description instanceof String ){\r\n        this.display = {'en-US': description};\r\n      }\r\n      else {\r\n        this.display = description;\r\n      }\r\n    }\r\n  };\r\n  Verb.prototype.toString = function(){\r\n    if(this.display && (this.display['en-US'] || this.display['en']))\r\n      return this.display['en-US'] || this.display['en'];\r\n    else\r\n      return this.id;\r\n  };\r\n  Verb.prototype.isValid = function(){\r\n    return this.id;\r\n  };\r\n\r\n  \r\n  /*\r\n   * Describes an object that an agent interacts with\r\n   * @param {string} id   The unique activity IRI\r\n   * @param {string} name   An English-language identifier for the activity, or a Language Map\r\n   * @param {string} description   An English-language description of the activity, or a Language Map\r\n   */\r\n  var Activity = function(id, name, description)\r\n  {\r\n    // if first arg is activity, copy everything over\r\n    if(id && id.id){\r\n      var act = id;\r\n      for(var i in act){\r\n        this[i] = act[i];\r\n      }\r\n      return;\r\n    }\r\n    \r\n    this.objectType = 'Activity';\r\n    this.id = id;\r\n    if( name || description )\r\n    {\r\n      this.definition = {};\r\n      \r\n      if( typeof(name) === 'string' || name instanceof String )\r\n        this.definition.name = {'en-US': name};\r\n      else if(name)\r\n        this.definition.name = name;\r\n      \r\n      if( typeof(description) === 'string' || description instanceof String )\r\n        this.definition.description = {'en-US': description};\r\n      else if(description)\r\n        this.definition.description = description;\r\n    }\r\n  };\r\n  Activity.prototype.toString = function(){\r\n    if(this.definition && this.definition.name && (this.definition.name['en-US'] || this.definition.name['en']))\r\n      return this.definition.name['en-US'] || this.definition.name['en'];\r\n    else\r\n      return this.id;\r\n  };\r\n  Activity.prototype.isValid = function(){\r\n    return this.id && (!this.objectType || this.objectType === 'Activity');\r\n  };\r\n  \r\n  /*\r\n   * An object that refers to a separate statement\r\n   * @param {string} id   The UUID of another xAPI statement\r\n   */\r\n  var StatementRef = function(id){\r\n    if(id && id.id){\r\n      for(var i in id){\r\n        this[i] = id[i];\r\n      }\r\n    }\r\n    else {\r\n      this.objectType = 'StatementRef';\r\n      this.id = id;\r\n    }\r\n  };\r\n  StatementRef.prototype.toString = function(){\r\n    return 'statement('+this.id+')';\r\n  };\r\n  StatementRef.prototype.isValid = function(){\r\n    return this.id && this.objectType && this.objectType === 'StatementRef';\r\n  };\r\n  \r\n  /*\r\n   * A self-contained statement as the object of another statement\r\n   * See XAPIStatement for constructor details\r\n   * @param {string} actor   The Agent or Group committing the action described by the statement\r\n   * @param {string} verb   The Verb for the action described by the statement\r\n   * @param {string} object   The receiver of the action. An Agent, Group, Activity, or StatementRef\r\n   */\r\n  var SubStatement = function(actor, verb, object){\r\n    XAPIStatement.call(this,actor,verb,object);\r\n    this.objectType = 'SubStatement';\r\n\r\n    delete this.id;\r\n    delete this.stored;\r\n    delete this.version;\r\n    delete this.authority;\r\n  };\r\n  SubStatement.prototype = new XAPIStatement;\r\n  SubStatement.prototype.toString = function(){\r\n    return '\"' + SubStatement.prototype.prototype.toString.call(this) + '\"';\r\n  };\r\n  \r\n  XAPIStatement.Agent = Agent;\r\n  XAPIStatement.Group = Group;\r\n  XAPIStatement.Verb = Verb;\r\n  XAPIStatement.Activity = Activity;\r\n  XAPIStatement.StatementRef = StatementRef;\r\n  XAPIStatement.SubStatement = SubStatement;\r\n  ADL.XAPIStatement = XAPIStatement;\r\n\r","    var onBrowser = (typeof window !== 'undefined');\r\n\r\n    var getObjDefName = function (o) {\r\n        if (o.definition && o.definition.name) {\r\n            return ADL.xapiutil.getLangVal(o.definition.name);\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    var getSubStatementDisplay = function (o) {\r\n        if(o.objectType !== \"SubStatement\") return;\r\n        if(o.object.objectType === \"SubStatement\") return;\r\n        if(o.id || o.stored || o.version || o.authority) return;\r\n        var disp =  ADL.xapiutil.getActorId(o.actor) + \":\" + ADL.xapiutil.getVerbDisplay(o.verb) + \":\" + ADL.xapiutil.getObjectId(o.object);\r\n        return disp;\r\n    };\r\n\r\n\r\n    ADL.xapiutil = {};\r\n\r\n    ADL.xapiutil.getLang = function () {\r\n        var lang;\r\n        if (typeof navigator !== 'undefined')\r\n            lang =  navigator.language || navigator.browserLanguage ||\r\n            navigator.systemLanguage || navigator.userLanguage;\r\n        else if (typeof process !== 'undefined' && typeof process.env !== 'undefined' && typeof process.env.LANG !== 'undefined') {\r\n            var str = process.env.LANG;\r\n            lang =  str.slice(0, str.indexOf('.'));\r\n            lang = lang.replace(/_/, '-')\r\n        }\r\n        return lang || \"en-US\";\r\n    };\r\n\r\n    ADL.xapiutil.getLangVal = function (langprop) {\r\n\r\n        if (!langprop) return;\r\n\r\n        var options = Object.keys(langprop);\r\n        // test that langprop is a dict (obj)\r\n        // skips if not a dict(obj) and returns\r\n        if (options.length == 0) return undefined;\r\n\r\n        var lang = ADL.xapiutil.getLang(),\r\n            ret,\r\n            dispGotten = false;\r\n\r\n        do {    //test and retest\r\n            if (langprop[lang])\r\n            {\r\n                ret = langprop[lang];\r\n                dispGotten = true;\r\n            }\r\n            else if (lang.indexOf('-'))\r\n            {\r\n                lang = lang.substring(0, lang.lastIndexOf('-'));\r\n            }\r\n        } while (!dispGotten && lang !==\"\");\r\n\r\n        return ret;\r\n    };\r\n\r\n    ADL.xapiutil.getMoreStatements = function (iterations, callback, searchParams) {\r\n        if (!onBrowser) throw new Error(\"Node not supported.\");\r\n\r\n        var stmts = [];\r\n\r\n        ADL.XAPIWrapper.getStatements(searchParams, null, function getMore(r) {\r\n            if (! (r && r.response) ) return;\r\n            var res = JSON.parse(r.response);\r\n            if (! res.statements) return;\r\n            stmts = stmts.concat(res.statements);\r\n\r\n            if (iterations-- <= 0) {\r\n                callback(stmts);\r\n            }\r\n            else {\r\n                if (res.more && res.more !== \"\")\r\n                {\r\n                    ADL.XAPIWrapper.getStatements(searchParams, res.more, getMore);\r\n                }\r\n                else if (res.more === \"\")\r\n                {\r\n                    callback(stmts);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    ADL.xapiutil.getActorId = function (a) {\r\n        return a.mbox || a.openid || a.mbox_sha1sum || a.account;\r\n    };\r\n\r\n    ADL.xapiutil.getActorIdString = function (a) {\r\n        var id = a.mbox || a.openid || a.mbox_sha1sum;\r\n        if (! id) {\r\n            if (a.account) id = a.account.homePage + \":\" + a.account.name;\r\n            else if (a.member) id = \"Anon Group \" + a.member;\r\n            else id = 'unknown';\r\n        }\r\n        return id;\r\n    };\r\n\r\n    ADL.xapiutil.getActorDisplay = function (a) {\r\n        return a.name || ADL.xapiutil.getActorIdString(a);\r\n    };\r\n\r\n    ADL.xapiutil.getVerbDisplay = function (v) {\r\n        if (!v) return;\r\n        if (v.display) {\r\n            return ADL.xapiutil.getLangVal(v.display) || v.id;\r\n        }\r\n        return v.id;\r\n    };\r\n\r\n    ADL.xapiutil.getObjectType = function (o) {\r\n        return o.objectType || ((o.id) ? \"Activity\" : \"Agent\");\r\n    };\r\n\r\n    ADL.xapiutil.getObjectId = function (o) {\r\n        if (o.id) return o.id;\r\n        var type = ADL.xapiutil.getObjectType(o);\r\n        if (type === \"Agent\" || type === \"Group\") return ADL.xapiutil.getActorId(o);\r\n        return undefined;\r\n    };\r\n\r\n    ADL.xapiutil.getObjectIdString = function (o) {\r\n        if (!o) return 'unknown'\r\n        if (o.id) return o.id;\r\n        var type = ADL.xapiutil.getObjectType(o);\r\n        if (type === \"Agent\" || type === \"Group\") return ADL.xapiutil.getActorIdString(o);\r\n        else if (type == \"SubStatement\") {\r\n            return getSubStatementDisplay(o);\r\n        }\r\n        return 'unknown';\r\n    };\r\n\r\n    ADL.xapiutil.getObjectDisplay = function (o) {\r\n        if (!o) return \"unknown\"\r\n        var disp = getObjDefName(o) || o.name || o.id;\r\n        if (! disp) {\r\n            var type = ADL.xapiutil.getObjectType(o);\r\n            if (type === \"Agent\" || type == \"Group\") disp = ADL.xapiutil.getActorDisplay(o);\r\n            else if (type == \"SubStatement\") {\r\n                disp = getSubStatementDisplay(o);\r\n            }\r\n        }\r\n\r\n        return disp;\r\n    };\r\n\r","function getQueryVariable(variable)\r\n{\r\n    var query = location.search.substring(1);\r\n    var vars = query.split('&');\r\n    for (var i = 0; i < vars.length; i++)\r\n    {\r\n        var pair = vars[i].split('=');\r\n        if (decodeURIComponent(pair[0]) == variable)\r\n        {\r\n            return decodeURIComponent(pair[1]);\r\n        }\r\n    }\r\n    // console.log('Query variable %s not found', variable);\r\n}\r\n\r\nfunction cb_wrap(cb)\r\n{\r\n    return function()\r\n    {\r\n        var args = arguments;\r\n        setTimeout(function()\r\n        {\r\n            var callerArgs = [];\r\n            for (var i = 0; i < args.length; i++)\r\n            {\r\n                callerArgs.push(args[i]);\r\n            }\r\n            cb.apply(window, callerArgs);\r\n        }, 0)\r\n    }\r\n}\r\n//The library will append the necessary launch info to each new A that is linked to the page.\r\n//NOTE: This cannot work if you programmatically change the window location. If you do, you must\r\n//execute the logic in setupCourseLinks to send the initialization data to the new location (if\r\n//you wish that new location to track as part of this session)\r\nfunction observeForNewLinks()\r\n{\r\n    // select the target node\r\n    var target = document.body;\r\n    // create an observer instance\r\n    var observer = new MutationObserver(function(mutations)\r\n    {\r\n        mutations.forEach(function(mutation)\r\n        {\r\n            for (var i in mutation.addedNodes)\r\n            {\r\n                if (mutation.addedNodes.hasOwnProperty(i))\r\n                {\r\n                    if (mutation.addedNodes[i].constructor == HTMLAnchorElement) {\r\n                        var node = mutation.addedNodes[i];\r\n                        setupCourseLinks([node]);\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n    });\r\n    // configuration of the observer:\r\n    var config = {\r\n        attributes: true,\r\n        childList: true,\r\n        subtree: true\r\n    };\r\n    // pass in the target node, as well as the observer options\r\n    observer.observe(target, config);\r\n    // later, you can stop observing\r\n    ///  observer.disconnect();\r\n}\r\n//This library will init all links in the DOM that include the attribute \"courseLink = true\"\r\n//with the information necessary for the document at that link to track as part of this session.\r\nfunction setupCourseLinks(_nodes)\r\n{\r\n    var launchToken = getQueryVariable(\"xAPILaunchKey\");\r\n    var launchEndpoint = getQueryVariable(\"xAPILaunchService\");\r\n    var encrypted = getQueryVariable(\"encrypted\");\r\n    var query = \"xAPILaunchKey=\" + launchToken + \"&xAPILaunchService=\" + launchEndpoint;\r\n    if (encrypted)\r\n    {\r\n        query += \"&encrypted=true\";\r\n    }\r\n    for(var i = 0; i < _nodes.length; i++)\r\n    {\r\n        var link = _nodes[i];\r\n        var href = link.href;\r\n        var courseLink = link.attributes.getNamedItem('courselink')\r\n        if (courseLink && courseLink.value == \"true\")\r\n        {\r\n            if (href.indexOf(\"?\") > -1)\r\n            {\r\n                href = href + \"&\" + query;\r\n            }\r\n            else\r\n                href = href + \"?\" + query;\r\n            link.href = href;\r\n        }\r\n    };\r\n}\r\n\r\nfunction xAPILaunch(cb, terminate_on_unload, strict_callbacks)\r\n{\r\n    if (isNode) throw ('ADL.launch not supported in node');\r\n    cb = cb_wrap(cb);\r\n    try\r\n    {\r\n        var launchToken = getQueryVariable(\"xAPILaunchKey\");\r\n        var launchEndpoint = getQueryVariable(\"xAPILaunchService\");\r\n        var encrypted = getQueryVariable(\"encrypted\");\r\n        if (encrypted)\r\n        {\r\n            //here, we'd have to implement decryption for the data. This makes little sense in a client side only course\r\n        }\r\n\r\n        xAPILaunch.terminate = function(message)\r\n        {\r\n            var launch = new URL(launchEndpoint);\r\n            launch.pathname += \"launch/\" + launchToken + \"/terminate\";\r\n            var xhr2 = new XMLHttpRequest();\r\n            xhr2.withCredentials = true;\r\n            xhr2.crossDomain = true;\r\n\r\n            xhr2.open('POST', launch.toString(), false);\r\n            xhr2.setRequestHeader(\"Content-type\" , \"application/json\");\r\n            xhr2.send(JSON.stringify({\"code\":0,\"description\": message ||\"User closed content\"}));\r\n\r\n        }\r\n\r\n        if (!launchToken || !launchEndpoint)\r\n            return cb(\"invalid launch parameters\");\r\n        var launch = new URL(launchEndpoint);\r\n        launch.pathname += \"launch/\" + launchToken;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.withCredentials = true;\r\n        xhr.crossDomain = true;\r\n        xhr.onerror = function(err)\r\n        {\r\n            //exit the try catch so inner execptions in the callback don't trigger this catch\r\n            setTimeout(function()\r\n            {\r\n                return cb(err);\r\n            })\r\n        }\r\n        xhr.onload = function(e)\r\n        {\r\n            if (xhr.status !== 200)\r\n            {\r\n                return xhr.onerror(xhr.responseText);\r\n            }\r\n            var body = JSON.parse(xhr.responseText);\r\n            var launchData = body;\r\n\r\n            var conf = {};\r\n            conf['endpoint'] = launchData.endpoint;\r\n            conf[\"actor\"] = launchData.actor;\r\n            conf.withCredentials = true;\r\n            conf.strictCallbacks = strict_callbacks || false;\r\n\r\n            root.onunload = function()\r\n            {\r\n                if (!terminate_on_unload)\r\n                    return;\r\n                xAPILaunch.terminate(\"User closed content\")\r\n            }\r\n            var wrapper = new ADL.XAPIWrapper.constructor();\r\n            wrapper.changeConfig(conf);\r\n            //Links that include \"courseLink='true'\"\r\n            setupCourseLinks(document.body.querySelectorAll('a'));\r\n            //Also, if links are added dynamically, we will do the same logic for those links.\r\n            observeForNewLinks();\r\n            return cb(null, body, wrapper);\r\n        }\r\n        xhr.open('POST', launch.toString(), true);\r\n        xhr.send();\r\n    }\r\n    catch (e)\r\n    {\r\n        cb(e);\r\n    }\r\n};\r\n\r\nvar isNode = Boolean(!root.document);\r\n\r\n// Node shim for browser location\r\nvar location = isNode ?\r\n    // Node\r\n    {\r\n        search: \"\",\r\n        protocol: \"https:\"\r\n    } :\r\n    // Browser\r\n    root.location;\r\n\r\nADL.launch = xAPILaunch;\r"]}